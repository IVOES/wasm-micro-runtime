core/app-framework/app-native-shared/attr_container.c:975:17: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                attr_container_printf(", type: byte array, length: %d\n",
                ^
core/app-framework/app-native-shared/attr_container.c:186:13: style: Redundant initialization for 'p'. The initialized value is overwritten before it is read. [redundantInitialization]
    if (!(p = attr_container_get_attr_begin(attr_cont, &total_length,
            ^
core/app-framework/app-native-shared/attr_container.c:181:19: note: p is initialized
    const char *p = attr_cont->buf;
                  ^
core/app-framework/app-native-shared/attr_container.c:186:13: note: p is overwritten
    if (!(p = attr_container_get_attr_begin(attr_cont, &total_length,
            ^
core/app-framework/app-native-shared/attr_container.c:180:14: style: The scope of the variable 'str_len' can be reduced. [variableScope]
    uint16_t str_len, attr_num, i;
             ^
core/app-framework/app-native-shared/attr_container.c:335:15: style: The scope of the variable 'p1' can be reduced. [variableScope]
    char *p, *p1, *attr_end, *msg_end, *attr_buf;
              ^
core/app-framework/app-native-shared/attr_container.c:881:27: style: The scope of the variable 'type' can be reduced. [variableScope]
    uint16_t attr_num, i, type;
                          ^
core/app-framework/app-native-shared/attr_container.c:882:27: style: The scope of the variable 'key' can be reduced. [variableScope]
    const char *p, *tag, *key;
                          ^
core/app-framework/app-native-shared/attr_container.c:158:14: style: Unsigned expression 'type' can't be negative so it is unnecessary to test it. [unsignedPositive]
    if (type >= ATTR_TYPE_BYTE && type <= ATTR_TYPE_BOOLEAN) {
             ^
core/app-framework/base/app/bh_platform.c:21:16: style: Condition '*c==0x04' is always false [knownConditionTrueFalse]
    return (*c == 0x04) ? true : false;
               ^
core/app-framework/base/app/bh_platform.c:19:14: note: Assignment 'i=0x01020304', assigned value is 16909060
    long i = 0x01020304;
             ^
core/app-framework/base/app/bh_platform.c:21:16: note: Condition '*c==0x04' is always false
    return (*c == 0x04) ? true : false;
               ^
core/app-framework/base/app/request.c:192:22: style: Local variable 'elpased_ms' shadows outer variable [shadowVariable]
        unsigned int elpased_ms, ms_to_expiry, now = wasm_get_sys_tick_ms();
                     ^
core/app-framework/base/app/request.c:154:18: note: Shadowed declaration
    unsigned int elpased_ms, now = wasm_get_sys_tick_ms();
                 ^
core/app-framework/base/app/request.c:192:22: note: Shadow variable
        unsigned int elpased_ms, ms_to_expiry, now = wasm_get_sys_tick_ms();
                     ^
core/app-framework/base/app/request.c:192:48: style: Local variable 'now' shadows outer variable [shadowVariable]
        unsigned int elpased_ms, ms_to_expiry, now = wasm_get_sys_tick_ms();
                                               ^
core/app-framework/base/app/request.c:154:30: note: Shadowed declaration
    unsigned int elpased_ms, now = wasm_get_sys_tick_ms();
                             ^
core/app-framework/base/app/request.c:192:48: note: Shadow variable
        unsigned int elpased_ms, ms_to_expiry, now = wasm_get_sys_tick_ms();
                                               ^
core/app-framework/connection/app/connection.c:62:36: style:inconclusive: Function 'api_close_connection' argument 1 names different: declaration 'conn' definition 'c'. [funcArgNamesDifferent]
api_close_connection(connection_t *c)
                                   ^
core/app-framework/connection/app/wa-inc/connection.h:65:36: note: Function 'api_close_connection' argument 1 names different: declaration 'conn' definition 'c'.
api_close_connection(connection_t *conn);
                                   ^
core/app-framework/connection/app/connection.c:62:36: note: Function 'api_close_connection' argument 1 names different: declaration 'conn' definition 'c'.
api_close_connection(connection_t *c)
                                   ^
core/app-framework/wgl/native/wgl_cb_wrapper.c:34:36: style: Variable 'module_inst' is assigned a value that is never used. [unreadVariable]
    wasm_module_inst_t module_inst = get_module_inst(exec_env);
                                   ^
core/app-framework/wgl/native/wgl_cb_wrapper.c:49:36: style: Variable 'module_inst' is assigned a value that is never used. [unreadVariable]
    wasm_module_inst_t module_inst = get_module_inst(exec_env);
                                   ^
core/app-framework/wgl/native/wgl_cb_wrapper.c:78:36: style: Variable 'module_inst' is assigned a value that is never used. [unreadVariable]
    wasm_module_inst_t module_inst = get_module_inst(exec_env);
                                   ^
core/app-framework/wgl/native/wgl_label_wrapper.c:34:36: style: Variable 'module_inst' is assigned a value that is never used. [unreadVariable]
    wasm_module_inst_t module_inst = get_module_inst(exec_env);
                                   ^
core/app-framework/wgl/native/wgl_label_wrapper.c:63:36: style: Variable 'module_inst' is assigned a value that is never used. [unreadVariable]
    wasm_module_inst_t module_inst = get_module_inst(exec_env);
                                   ^
core/app-framework/wgl/native/wgl_native_utils.c:79:39: style: Local variable 'size' shadows outer argument [shadowArgument]
            uint64 argv_copy_buf[16], size;
                                      ^
core/app-framework/wgl/native/wgl_native_utils.c:62:29: note: Shadowed declaration
                     uint32 size, int32 func_id, uint32 *argv, uint32 argc)
                            ^
core/app-framework/wgl/native/wgl_native_utils.c:79:39: note: Shadow variable
            uint64 argv_copy_buf[16], size;
                                      ^
core/app-framework/wgl/native/wgl_obj_wrapper.c:82:20: style: The scope of the variable 'elem' can be reduced. [variableScope]
    object_node_t *elem;
                   ^
core/app-mgr/app-manager/app_manager_host.c:48:16: style: Condition '*c==0x04' is always false [knownConditionTrueFalse]
    return (*c == 0x04) ? true : false;
               ^
core/app-mgr/app-manager/app_manager_host.c:46:14: note: Assignment 'i=0x01020304', assigned value is 16909060
    long i = 0x01020304;
             ^
core/app-mgr/app-manager/app_manager_host.c:48:16: note: Condition '*c==0x04' is always false
    return (*c == 0x04) ? true : false;
               ^
core/app-mgr/app-manager/module_jeff.c:226:96: error: Unmatched ')'. Configuration: 'BEIHAI_ENABLE_NO_SIGNATURE=0;ENABLE_JEFF'. [syntaxError]
                    init_request(request, "/applet", COAP_DELETE, (char *)payload, payload_len));
                                                                                               ^
core/app-mgr/app-manager/module_jeff.c:226:96: error: Unmatched ')'. Configuration: 'ENABLE_JEFF'. [syntaxError]
                    init_request(request, "/applet", COAP_DELETE, (char *)payload, payload_len));
                                                                                               ^
core/app-mgr/app-manager/module_wasm_app.c:1127:9: warning: The address of local variable 'request_fmt' might be accessed at non-zero index. [objectIndex]
        RECV_INTEGER(recv_ctx.message.request_fmt, Phase_Req_Mid);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1127:9: note: Address of variable taken here.
        RECV_INTEGER(recv_ctx.message.request_fmt, Phase_Req_Mid);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1127:9: note: The address of local variable 'request_fmt' might be accessed at non-zero index.
        RECV_INTEGER(recv_ctx.message.request_fmt, Phase_Req_Mid);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1131:9: warning: The address of local variable 'request_mid' might be accessed at non-zero index. [objectIndex]
        RECV_INTEGER(recv_ctx.message.request_mid, Phase_Req_Sender);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1131:9: note: Address of variable taken here.
        RECV_INTEGER(recv_ctx.message.request_mid, Phase_Req_Sender);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1131:9: note: The address of local variable 'request_mid' might be accessed at non-zero index.
        RECV_INTEGER(recv_ctx.message.request_mid, Phase_Req_Sender);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1135:9: warning: The address of local variable 'request_sender' might be accessed at non-zero index. [objectIndex]
        RECV_INTEGER(recv_ctx.message.request_sender, Phase_Req_Url_Len);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1135:9: note: Address of variable taken here.
        RECV_INTEGER(recv_ctx.message.request_sender, Phase_Req_Url_Len);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1135:9: note: The address of local variable 'request_sender' might be accessed at non-zero index.
        RECV_INTEGER(recv_ctx.message.request_sender, Phase_Req_Url_Len);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1141:10: warning: The address of local variable 'request_url_len' might be accessed at non-zero index. [objectIndex]
        p[recv_ctx.size_in_phase++] = ch;
         ^
core/app-mgr/app-manager/module_wasm_app.c:1139:22: note: Address of variable taken here.
        p = (uint8 *)&recv_ctx.message.request_url_len;
                     ^
core/app-mgr/app-manager/module_wasm_app.c:1141:10: note: The address of local variable 'request_url_len' might be accessed at non-zero index.
        p[recv_ctx.size_in_phase++] = ch;
         ^
core/app-mgr/app-manager/module_wasm_app.c:1163:9: warning: The address of local variable 'wasm_app_size' might be accessed at non-zero index. [objectIndex]
        RECV_INTEGER(recv_ctx.message.wasm_app_size, Phase_Req_Url);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1163:9: note: Address of variable taken here.
        RECV_INTEGER(recv_ctx.message.wasm_app_size, Phase_Req_Url);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1163:9: note: The address of local variable 'wasm_app_size' might be accessed at non-zero index.
        RECV_INTEGER(recv_ctx.message.wasm_app_size, Phase_Req_Url);
        ^
core/app-mgr/app-manager/module_wasm_app.c:1178:10: warning: The address of local variable 'app_file_magic' might be accessed at non-zero index. [objectIndex]
        p[recv_ctx.size_in_phase++] = ch;
         ^
core/app-mgr/app-manager/module_wasm_app.c:1176:22: note: Address of variable taken here.
        p = (uint8 *)&recv_ctx.message.app_file_magic;
                     ^
core/app-mgr/app-manager/module_wasm_app.c:1178:10: note: The address of local variable 'app_file_magic' might be accessed at non-zero index.
        p[recv_ctx.size_in_phase++] = ch;
         ^
core/app-mgr/app-manager/module_wasm_app.c:533:5: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
    if (is_bytecode) {
    ^
core/app-mgr/app-manager/module_wasm_app.c:541:5: note: Found duplicate branches for 'if' and 'else'.
    else {
    ^
core/app-mgr/app-manager/module_wasm_app.c:533:5: note: Found duplicate branches for 'if' and 'else'.
    if (is_bytecode) {
    ^
core/app-mgr/app-manager/module_wasm_app.c:348:30: style: The scope of the variable 'timer_id' can be reduced. [variableScope]
                unsigned int timer_id;
                             ^
core/app-mgr/app-manager/module_wasm_app.c:1029:44: style:inconclusive: Function 'wasm_app_module_watchdog_kill' argument 1 names different: declaration 'module_data' definition 'm_data'. [funcArgNamesDifferent]
wasm_app_module_watchdog_kill(module_data *m_data)
                                           ^
core/app-mgr/app-manager/module_wasm_app.c:117:44: note: Function 'wasm_app_module_watchdog_kill' argument 1 names different: declaration 'module_data' definition 'm_data'.
wasm_app_module_watchdog_kill(module_data *module_data);
                                           ^
core/app-mgr/app-manager/module_wasm_app.c:1029:44: note: Function 'wasm_app_module_watchdog_kill' argument 1 names different: declaration 'module_data' definition 'm_data'.
wasm_app_module_watchdog_kill(module_data *m_data)
                                           ^
core/app-mgr/app-manager/module_wasm_app.c:1037:32: style:inconclusive: Function 'wasm_register_msg_callback' argument 1 names different: declaration 'msg_type' definition 'message_type'. [funcArgNamesDifferent]
wasm_register_msg_callback(int message_type,
                               ^
core/app-mgr/app-manager/module_wasm_app.h:113:32: note: Function 'wasm_register_msg_callback' argument 1 names different: declaration 'msg_type' definition 'message_type'.
wasm_register_msg_callback(int msg_type,
                               ^
core/app-mgr/app-manager/module_wasm_app.c:1037:32: note: Function 'wasm_register_msg_callback' argument 1 names different: declaration 'msg_type' definition 'message_type'.
wasm_register_msg_callback(int message_type,
                               ^
core/app-mgr/app-manager/module_wasm_app.c:47:10: style: union member 'Anonymous2::b' is never used. [unusedStructMember]
    char b;
         ^
core/app-mgr/app-manager/module_wasm_app.c:569:12: style: Unused variable: version [unusedVariable]
    uint32 version;
           ^
core/app-mgr/app-manager/module_wasm_app.c:607:57: style: Unused variable: err_resp [unusedVariable]
    char timers_str[MAX_INT_STR_LEN] = { 0 }, err[128], err_resp[256];
                                                        ^
core/app-mgr/app-manager/watchdog.c:38:34: style:inconclusive: Function 'watchdog_timer_init' argument 1 names different: declaration 'module_data' definition 'm_data'. [funcArgNamesDifferent]
watchdog_timer_init(module_data *m_data)
                                 ^
core/app-mgr/app-manager/watchdog.h:16:34: note: Function 'watchdog_timer_init' argument 1 names different: declaration 'module_data' definition 'm_data'.
watchdog_timer_init(module_data *module_data);
                                 ^
core/app-mgr/app-manager/watchdog.c:38:34: note: Function 'watchdog_timer_init' argument 1 names different: declaration 'module_data' definition 'm_data'.
watchdog_timer_init(module_data *m_data)
                                 ^
core/iwasm/aot/aot_intrinsic.c:226:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/aot/aot_intrinsic.c:237:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/aot/aot_intrinsic.c:248:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/aot/aot_intrinsic.c:259:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/aot/aot_loader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/aot/aot_loader.c:2976:29: style: Condition 'section_type==AOT_SECTION_TYPE_TARGET_INFO' is always false [knownConditionTrueFalse]
            || section_type == AOT_SECTION_TYPE_TARGET_INFO) {
                            ^
core/iwasm/aot/aot_loader.c:2975:26: note: Assuming that condition 'section_type<=AOT_SECTION_TYPE_SIGANATURE' is not redundant
        if (section_type <= AOT_SECTION_TYPE_SIGANATURE
                         ^
core/iwasm/aot/aot_loader.c:2976:29: note: Condition 'section_type==AOT_SECTION_TYPE_TARGET_INFO' is always false
            || section_type == AOT_SECTION_TYPE_TARGET_INFO) {
                            ^
core/iwasm/aot/aot_loader.c:35:13: style: The scope of the variable 'args' can be reduced. [variableScope]
    va_list args;
            ^
core/iwasm/aot/aot_loader.c:36:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[128];
         ^
core/iwasm/aot/aot_loader.c:1889:10: style: The scope of the variable 'ch' can be reduced. [variableScope]
    char ch;
         ^
core/iwasm/aot/aot_loader.c:1912:10: style: The scope of the variable 'ch' can be reduced. [variableScope]
    char ch;
         ^
core/iwasm/aot/aot_loader.c:2289:19: style: Variable 'map_flags' is not assigned a value. [unassignedVariable]
    int map_prot, map_flags;
                  ^
core/iwasm/aot/aot_runtime.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/aot/aot_runtime.c:1664:13: style: Expression is always true because 'else if' condition is opposite to previous condition at line 1645. [multiCondition]
        if (!exec_env) {
            ^
core/iwasm/aot/aot_runtime.c:1645:9: note: first condition
    if (exec_env) {
        ^
core/iwasm/aot/aot_runtime.c:1664:13: note: else if condition is opposite to first condition
        if (!exec_env) {
            ^
core/iwasm/aot/aot_runtime.c:1731:13: style: Expression is always true because 'else if' condition is opposite to previous condition at line 1712. [multiCondition]
        if (!exec_env) {
            ^
core/iwasm/aot/aot_runtime.c:1712:9: note: first condition
    if (exec_env) {
        ^
core/iwasm/aot/aot_runtime.c:1731:13: note: else if condition is opposite to first condition
        if (!exec_env) {
            ^
core/iwasm/aot/aot_runtime.c:975:36: style: Condition '!initialize_func' is always true [knownConditionTrueFalse]
    if (!module->start_function && !initialize_func && !post_inst_func
                                   ^
core/iwasm/aot/aot_runtime.c:933:44: note: Assignment 'initialize_func=NULL', assigned value is 0
    AOTFunctionInstance *initialize_func = NULL;
                                           ^
core/iwasm/aot/aot_runtime.c:975:36: note: Condition '!initialize_func' is always true
    if (!module->start_function && !initialize_func && !post_inst_func
                                   ^
core/iwasm/aot/aot_runtime.c:976:12: style: Condition '!call_ctors_func' is always true [knownConditionTrueFalse]
        && !call_ctors_func) {
           ^
core/iwasm/aot/aot_runtime.c:935:44: note: Assignment 'call_ctors_func=NULL', assigned value is 0
    AOTFunctionInstance *call_ctors_func = NULL;
                                           ^
core/iwasm/aot/aot_runtime.c:976:12: note: Condition '!call_ctors_func' is always true
        && !call_ctors_func) {
           ^
core/iwasm/aot/aot_runtime.c:1006:13: style: Condition '!exec_env' is always true [knownConditionTrueFalse]
        if (!exec_env) {
            ^
core/iwasm/aot/aot_runtime.c:940:29: note: Assignment 'exec_env=NULL', assigned value is 0
    WASMExecEnv *exec_env = NULL, *exec_env_created = NULL;
                            ^
core/iwasm/aot/aot_runtime.c:976:9: note: Assuming condition is false
        && !call_ctors_func) {
        ^
core/iwasm/aot/aot_runtime.c:1006:13: note: Condition '!exec_env' is always true
        if (!exec_env) {
            ^
core/iwasm/aot/aot_runtime.c:1488:24: style: Redundant initialization for 'argv1'. The initialized value is overwritten before it is read. [redundantInitialization]
            && !(argv1 = runtime_malloc(size, module_inst->cur_exception,
                       ^
core/iwasm/aot/aot_runtime.c:1476:38: note: argv1 is initialized
        uint32 argv1_buf[32], *argv1 = argv1_buf, *ext_rets = NULL;
                                     ^
core/iwasm/aot/aot_runtime.c:1488:24: note: argv1 is overwritten
            && !(argv1 = runtime_malloc(size, module_inst->cur_exception,
                       ^
core/iwasm/aot/aot_runtime.c:2104:24: style: Redundant initialization for 'argv1'. The initialized value is overwritten before it is read. [redundantInitialization]
            && !(argv1 = runtime_malloc(size, module_inst->cur_exception,
                       ^
core/iwasm/aot/aot_runtime.c:2090:38: note: argv1 is initialized
        uint32 argv1_buf[32], *argv1 = argv1_buf;
                                     ^
core/iwasm/aot/aot_runtime.c:2104:24: note: argv1 is overwritten
            && !(argv1 = runtime_malloc(size, module_inst->cur_exception,
                       ^
core/iwasm/aot/aot_runtime.c:62:13: style: The scope of the variable 'args' can be reduced. [variableScope]
    va_list args;
            ^
core/iwasm/aot/aot_runtime.c:63:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[128];
         ^
core/iwasm/aot/aot_runtime.c:1762:41: style:inconclusive: Function 'aot_module_malloc_internal' argument 2 names different: declaration 'env' definition 'exec_env'. [funcArgNamesDifferent]
                           WASMExecEnv *exec_env, uint32 size,
                                        ^
core/iwasm/aot/aot_runtime.h:498:73: note: Function 'aot_module_malloc_internal' argument 2 names different: declaration 'env' definition 'exec_env'.
aot_module_malloc_internal(AOTModuleInstance *module_inst, WASMExecEnv *env,
                                                                        ^
core/iwasm/aot/aot_runtime.c:1762:41: note: Function 'aot_module_malloc_internal' argument 2 names different: declaration 'env' definition 'exec_env'.
                           WASMExecEnv *exec_env, uint32 size,
                                        ^
core/iwasm/aot/aot_runtime.c:1825:42: style:inconclusive: Function 'aot_module_realloc_internal' argument 2 names different: declaration 'env' definition 'exec_env'. [funcArgNamesDifferent]
                            WASMExecEnv *exec_env, uint32 ptr, uint32 size,
                                         ^
core/iwasm/aot/aot_runtime.h:502:74: note: Function 'aot_module_realloc_internal' argument 2 names different: declaration 'env' definition 'exec_env'.
aot_module_realloc_internal(AOTModuleInstance *module_inst, WASMExecEnv *env,
                                                                         ^
core/iwasm/aot/aot_runtime.c:1825:42: note: Function 'aot_module_realloc_internal' argument 2 names different: declaration 'env' definition 'exec_env'.
                            WASMExecEnv *exec_env, uint32 ptr, uint32 size,
                                         ^
core/iwasm/aot/aot_runtime.c:1862:71: style:inconclusive: Function 'aot_module_free_internal' argument 2 names different: declaration 'env' definition 'exec_env'. [funcArgNamesDifferent]
aot_module_free_internal(AOTModuleInstance *module_inst, WASMExecEnv *exec_env,
                                                                      ^
core/iwasm/aot/aot_runtime.h:506:71: note: Function 'aot_module_free_internal' argument 2 names different: declaration 'env' definition 'exec_env'.
aot_module_free_internal(AOTModuleInstance *module_inst, WASMExecEnv *env,
                                                                      ^
core/iwasm/aot/aot_runtime.c:1862:71: note: Function 'aot_module_free_internal' argument 2 names different: declaration 'env' definition 'exec_env'.
aot_module_free_internal(AOTModuleInstance *module_inst, WASMExecEnv *exec_env,
                                                                      ^
core/iwasm/aot/aot_runtime.c:1499:28: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            argv1 + argc + sizeof(void *) / sizeof(uint32) * ext_ret_count;
                           ^
core/iwasm/aot/aot_runtime.c:1503:43: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            *(uintptr_t *)(argv1 + argc + sizeof(void *) / sizeof(uint32) * i) =
                                          ^
core/iwasm/aot/aot_runtime.c:1560:28: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            argv1 + argc + sizeof(void *) / sizeof(uint32) * ext_ret_count;
                           ^
core/iwasm/aot/aot_runtime.c:2115:28: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            argv1 + argc + sizeof(void *) / sizeof(uint32) * ext_ret_count;
                           ^
core/iwasm/aot/aot_runtime.c:2119:43: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            *(uintptr_t *)(argv1 + argc + sizeof(void *) / sizeof(uint32) * i) =
                                          ^
core/iwasm/aot/aot_runtime.c:2156:28: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            argv1 + argc + sizeof(void *) / sizeof(uint32) * ext_ret_count;
                           ^
core/iwasm/aot/arch/aot_reloc_riscv.c:234:12: style: The scope of the variable 'p' can be reduced. [variableScope]
    uint8 *p;
           ^
core/iwasm/aot/arch/aot_reloc_thumb.c:403:36: portability: 'symbol_addr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            offset += (symbol_addr + reloc_addend);
                                   ^
core/iwasm/aot/arch/aot_reloc_x86_64.c:201:18: style: The scope of the variable 'buf' can be reduced. [variableScope]
            char buf[128];
                 ^
core/iwasm/aot/arch/aot_reloc_xtensa.c:153:28: style: The scope of the variable 'addr_aligned2' can be reduced. [variableScope]
    int32 *addr_aligned1, *addr_aligned2;
                           ^
core/iwasm/aot/arch/aot_reloc_xtensa.c:192:0: information: Skipping configuration '__packed' since the value of '__packed' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    } __packed l;
^
core/iwasm/aot/arch/aot_reloc_xtensa.c:197:0: information: Skipping configuration '__packed' since the value of '__packed' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    } __packed b;
^
core/iwasm/common/arch/invokeNative_general.c:12:23: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
    bh_assert(argc >= sizeof(WASMExecEnv *) / sizeof(uint32));
                      ^
core/iwasm/common/wasm_application.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/common/wasm_application.c:249:26: style: struct member 'Anonymous2::exponent' is never used. [unusedStructMember]
            unsigned int exponent : 8;
                         ^
core/iwasm/common/wasm_application.c:254:26: style: struct member 'Anonymous3::exponent' is never used. [unusedStructMember]
            unsigned int exponent : 8;
                         ^
core/iwasm/common/wasm_application.c:267:26: style: struct member 'Anonymous5::exponent' is never used. [unusedStructMember]
            unsigned int exponent : 11;
                         ^
core/iwasm/common/wasm_application.c:277:26: style: struct member 'Anonymous6::exponent' is never used. [unusedStructMember]
            unsigned int exponent : 11;
                         ^
core/iwasm/common/wasm_c_api.c:2432:17: style: Condition '!module_name_rt' is always true [knownConditionTrueFalse]
            if (!module_name_rt || !field_name_rt || !type_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2402:32: note: Assignment 'module_name_rt=NULL', assigned value is 0
        char *module_name_rt = NULL, *field_name_rt = NULL;
                               ^
core/iwasm/common/wasm_c_api.c:2432:17: note: Condition '!module_name_rt' is always true
            if (!module_name_rt || !field_name_rt || !type_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2469:17: style: Condition '!module_name_rt' is always true [knownConditionTrueFalse]
            if (!module_name_rt || !field_name_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2402:32: note: Assignment 'module_name_rt=NULL', assigned value is 0
        char *module_name_rt = NULL, *field_name_rt = NULL;
                               ^
core/iwasm/common/wasm_c_api.c:2469:17: note: Condition '!module_name_rt' is always true
            if (!module_name_rt || !field_name_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2509:17: style: Condition '!module_name_rt' is always true [knownConditionTrueFalse]
            if (!module_name_rt || !field_name_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2402:32: note: Assignment 'module_name_rt=NULL', assigned value is 0
        char *module_name_rt = NULL, *field_name_rt = NULL;
                               ^
core/iwasm/common/wasm_c_api.c:2509:17: note: Condition '!module_name_rt' is always true
            if (!module_name_rt || !field_name_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2552:17: style: Condition '!module_name_rt' is always true [knownConditionTrueFalse]
            if (!module_name_rt || !field_name_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2402:32: note: Assignment 'module_name_rt=NULL', assigned value is 0
        char *module_name_rt = NULL, *field_name_rt = NULL;
                               ^
core/iwasm/common/wasm_c_api.c:2552:17: note: Condition '!module_name_rt' is always true
            if (!module_name_rt || !field_name_rt) {
                ^
core/iwasm/common/wasm_c_api.c:2646:13: style: Condition '!export' is always true [knownConditionTrueFalse]
        if (!export) {
            ^
core/iwasm/common/wasm_c_api.c:2633:30: note: Assignment 'export=NULL', assigned value is 0
        WASMExport *export = NULL;
                             ^
core/iwasm/common/wasm_c_api.c:2646:13: note: Condition '!export' is always true
        if (!export) {
            ^
core/iwasm/common/wasm_c_api.c:1344:42: style:inconclusive: Function 'wasm_importtype_new' argument 1 names different: declaration 'module' definition 'module_name'. [funcArgNamesDifferent]
wasm_importtype_new(own wasm_byte_vec_t *module_name,
                                         ^
core/iwasm/include/wasm_c_api.h:352:20: note: Function 'wasm_importtype_new' argument 1 names different: declaration 'module' definition 'module_name'.
  own wasm_name_t* module, own wasm_name_t* name, own wasm_externtype_t*);
                   ^
core/iwasm/common/wasm_c_api.c:1344:42: note: Function 'wasm_importtype_new' argument 1 names different: declaration 'module' definition 'module_name'.
wasm_importtype_new(own wasm_byte_vec_t *module_name,
                                         ^
core/iwasm/common/wasm_c_api.c:1345:42: style:inconclusive: Function 'wasm_importtype_new' argument 2 names different: declaration 'name' definition 'field_name'. [funcArgNamesDifferent]
                    own wasm_byte_vec_t *field_name,
                                         ^
core/iwasm/include/wasm_c_api.h:352:45: note: Function 'wasm_importtype_new' argument 2 names different: declaration 'name' definition 'field_name'.
  own wasm_name_t* module, own wasm_name_t* name, own wasm_externtype_t*);
                                            ^
core/iwasm/common/wasm_c_api.c:1345:42: note: Function 'wasm_importtype_new' argument 2 names different: declaration 'name' definition 'field_name'.
                    own wasm_byte_vec_t *field_name,
                                         ^
core/iwasm/common/wasm_c_api.c:1676:30: style:inconclusive: Function 'wasm_ref_new_internal' argument 3 names different: declaration 'obj_idx_rt' definition 'ref_idx_rt'. [funcArgNamesDifferent]
                      uint32 ref_idx_rt, WASMModuleInstanceCommon *inst_comm_rt)
                             ^
core/iwasm/common/wasm_c_api_internal.h:219:30: note: Function 'wasm_ref_new_internal' argument 3 names different: declaration 'obj_idx_rt' definition 'ref_idx_rt'.
                      uint32 obj_idx_rt,
                             ^
core/iwasm/common/wasm_c_api.c:1676:30: note: Function 'wasm_ref_new_internal' argument 3 names different: declaration 'obj_idx_rt' definition 'ref_idx_rt'.
                      uint32 ref_idx_rt, WASMModuleInstanceCommon *inst_comm_rt)
                             ^
core/iwasm/common/wasm_c_api.c:3234:63: style:inconclusive: Function 'wasm_func_call' argument 2 names different: declaration 'args' definition 'params'. [funcArgNamesDifferent]
wasm_func_call(const wasm_func_t *func, const wasm_val_vec_t *params,
                                                              ^
core/iwasm/include/wasm_c_api.h:511:45: note: Function 'wasm_func_call' argument 2 names different: declaration 'args' definition 'params'.
  const wasm_func_t*, const wasm_val_vec_t* args, wasm_val_vec_t* results);
                                            ^
core/iwasm/common/wasm_c_api.c:3234:63: note: Function 'wasm_func_call' argument 2 names different: declaration 'args' definition 'params'.
wasm_func_call(const wasm_func_t *func, const wasm_val_vec_t *params,
                                                              ^
core/iwasm/common/wasm_c_api.c:4234:22: style: Variable 'module_inst_comm' is assigned a value that is never used. [unreadVariable]
    module_inst_comm = memory->inst_comm_rt;
                     ^
core/iwasm/common/wasm_c_api.c:4271:22: style: Variable 'module_inst_comm' is assigned a value that is never used. [unreadVariable]
    module_inst_comm = memory->inst_comm_rt;
                     ^
core/iwasm/common/wasm_c_api.c:4310:22: style: Variable 'module_inst_comm' is assigned a value that is never used. [unreadVariable]
    module_inst_comm = memory->inst_comm_rt;
                     ^
core/iwasm/common/wasm_c_api.c:417:0: information: Skipping configuration 'OS_THREAD_MUTEX_INITIALIZER' since the value of 'OS_THREAD_MUTEX_INITIALIZER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static korp_mutex engine_lock = OS_THREAD_MUTEX_INITIALIZER;
^
core/iwasm/common/wasm_c_api.c:407:0: information: Skipping configuration 'os_thread_local_attribute' since the value of 'os_thread_local_attribute' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static os_thread_local_attribute unsigned thread_local_stores_num = 0;
^
core/iwasm/common/wasm_exec_env.c:104:5: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
    wasm_runtime_free(exec_env);
    ^
core/iwasm/common/wasm_memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/common/wasm_memory.c:274:58: style:inconclusive: Function 'wasm_runtime_validate_app_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_validate_app_addr(WASMModuleInstanceCommon *module_inst_comm,
                                                         ^
core/iwasm/include/wasm_export.h:997:51: note: Function 'wasm_runtime_validate_app_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_validate_app_addr(wasm_module_inst_t module_inst,
                                                  ^
core/iwasm/common/wasm_memory.c:274:58: note: Function 'wasm_runtime_validate_app_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_validate_app_addr(WASMModuleInstanceCommon *module_inst_comm,
                                                         ^
core/iwasm/common/wasm_memory.c:307:62: style:inconclusive: Function 'wasm_runtime_validate_app_str_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_validate_app_str_addr(WASMModuleInstanceCommon *module_inst_comm,
                                                             ^
core/iwasm/include/wasm_export.h:1019:55: note: Function 'wasm_runtime_validate_app_str_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_validate_app_str_addr(wasm_module_inst_t module_inst,
                                                      ^
core/iwasm/common/wasm_memory.c:307:62: note: Function 'wasm_runtime_validate_app_str_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_validate_app_str_addr(WASMModuleInstanceCommon *module_inst_comm,
                                                             ^
core/iwasm/common/wasm_memory.c:339:61: style:inconclusive: Function 'wasm_runtime_validate_native_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_validate_native_addr(WASMModuleInstanceCommon *module_inst_comm,
                                                            ^
core/iwasm/include/wasm_export.h:1035:54: note: Function 'wasm_runtime_validate_native_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_validate_native_addr(wasm_module_inst_t module_inst,
                                                     ^
core/iwasm/common/wasm_memory.c:339:61: note: Function 'wasm_runtime_validate_native_addr' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_validate_native_addr(WASMModuleInstanceCommon *module_inst_comm,
                                                            ^
core/iwasm/common/wasm_memory.c:374:59: style:inconclusive: Function 'wasm_runtime_addr_app_to_native' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_addr_app_to_native(WASMModuleInstanceCommon *module_inst_comm,
                                                          ^
core/iwasm/include/wasm_export.h:1051:52: note: Function 'wasm_runtime_addr_app_to_native' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_addr_app_to_native(wasm_module_inst_t module_inst,
                                                   ^
core/iwasm/common/wasm_memory.c:374:59: note: Function 'wasm_runtime_addr_app_to_native' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_addr_app_to_native(WASMModuleInstanceCommon *module_inst_comm,
                                                          ^
core/iwasm/common/wasm_memory.c:410:59: style:inconclusive: Function 'wasm_runtime_addr_native_to_app' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_addr_native_to_app(WASMModuleInstanceCommon *module_inst_comm,
                                                          ^
core/iwasm/include/wasm_export.h:1063:52: note: Function 'wasm_runtime_addr_native_to_app' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_addr_native_to_app(wasm_module_inst_t module_inst,
                                                   ^
core/iwasm/common/wasm_memory.c:410:59: note: Function 'wasm_runtime_addr_native_to_app' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_addr_native_to_app(WASMModuleInstanceCommon *module_inst_comm,
                                                          ^
core/iwasm/common/wasm_memory.c:442:59: style:inconclusive: Function 'wasm_runtime_get_app_addr_range' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_get_app_addr_range(WASMModuleInstanceCommon *module_inst_comm,
                                                          ^
core/iwasm/include/wasm_export.h:1077:52: note: Function 'wasm_runtime_get_app_addr_range' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_get_app_addr_range(wasm_module_inst_t module_inst,
                                                   ^
core/iwasm/common/wasm_memory.c:442:59: note: Function 'wasm_runtime_get_app_addr_range' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_get_app_addr_range(WASMModuleInstanceCommon *module_inst_comm,
                                                          ^
core/iwasm/common/wasm_memory.c:472:62: style:inconclusive: Function 'wasm_runtime_get_native_addr_range' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'. [funcArgNamesDifferent]
wasm_runtime_get_native_addr_range(WASMModuleInstanceCommon *module_inst_comm,
                                                             ^
core/iwasm/include/wasm_export.h:1096:55: note: Function 'wasm_runtime_get_native_addr_range' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_get_native_addr_range(wasm_module_inst_t module_inst,
                                                      ^
core/iwasm/common/wasm_memory.c:472:62: note: Function 'wasm_runtime_get_native_addr_range' argument 1 names different: declaration 'module_inst' definition 'module_inst_comm'.
wasm_runtime_get_native_addr_range(WASMModuleInstanceCommon *module_inst_comm,
                                                             ^
core/iwasm/common/wasm_memory.c:767:41: style:inconclusive: Function 'wasm_enlarge_memory' argument 1 names different: declaration 'module_inst' definition 'module'. [funcArgNamesDifferent]
wasm_enlarge_memory(WASMModuleInstance *module, uint32 inc_page_count)
                                        ^
core/iwasm/interpreter/wasm_runtime.h:496:41: note: Function 'wasm_enlarge_memory' argument 1 names different: declaration 'module_inst' definition 'module'.
wasm_enlarge_memory(WASMModuleInstance *module_inst, uint32 inc_page_count);
                                        ^
core/iwasm/common/wasm_memory.c:767:41: note: Function 'wasm_enlarge_memory' argument 1 names different: declaration 'module_inst' definition 'module'.
wasm_enlarge_memory(WASMModuleInstance *module, uint32 inc_page_count)
                                        ^
core/iwasm/common/wasm_native.c:96:10: style: The scope of the variable 'sig' can be reduced. [variableScope]
    char sig;
         ^
core/iwasm/common/wasm_native.c:233:18: style: The scope of the variable 'mid' can be reduced. [variableScope]
    int low = 0, mid, ret;
                 ^
core/iwasm/common/wasm_native.c:233:23: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int low = 0, mid, ret;
                      ^
core/iwasm/common/wasm_runtime_common.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/common/wasm_runtime_common.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
core/iwasm/common/wasm_shared_memory.c:115:22: style: Variable 'ref_count' is assigned a value that is never used. [unreadVariable]
    uint32 ref_count = 0;
                     ^
core/iwasm/compilation/aot.c:416:55: style: Variable 'comp_data->memories[i].num_bytes_per_page' is reassigned a value before the old one has been used. [redundantAssignment]
            comp_data->memories[i].num_bytes_per_page =
                                                      ^
core/iwasm/compilation/aot.c:410:55: note: comp_data->memories[i].num_bytes_per_page is assigned
            comp_data->memories[i].num_bytes_per_page =
                                                      ^
core/iwasm/compilation/aot.c:416:55: note: comp_data->memories[i].num_bytes_per_page is overwritten
            comp_data->memories[i].num_bytes_per_page =
                                                      ^
core/iwasm/compilation/aot.c:428:55: style: Variable 'comp_data->memories[i].num_bytes_per_page' is reassigned a value before the old one has been used. [redundantAssignment]
            comp_data->memories[i].num_bytes_per_page =
                                                      ^
core/iwasm/compilation/aot.c:422:55: note: comp_data->memories[i].num_bytes_per_page is assigned
            comp_data->memories[i].num_bytes_per_page =
                                                      ^
core/iwasm/compilation/aot.c:428:55: note: comp_data->memories[i].num_bytes_per_page is overwritten
            comp_data->memories[i].num_bytes_per_page =
                                                      ^
core/iwasm/compilation/aot_compiler.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_aot_file.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_aot_file.c:3295:9: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
        return false;
        ^
core/iwasm/compilation/aot_emit_aot_file.c:58:41: style: Condition 'chr<=0xEF' is always true [knownConditionTrueFalse]
            else if (chr >= 0xE1 && chr <= 0xEF) {
                                        ^
core/iwasm/compilation/aot_emit_aot_file.c:47:37: note: Assuming that condition 'chr<=0xEF' is not redundant
        else if (chr >= 0xE0 && chr <= 0xEF && p + 2 < p_end) {
                                    ^
core/iwasm/compilation/aot_emit_aot_file.c:58:41: note: Condition 'chr<=0xEF' is always true
            else if (chr >= 0xE1 && chr <= 0xEF) {
                                        ^
core/iwasm/compilation/aot_emit_aot_file.c:2857:22: style: Redundant initialization for 'relocation'. The initialized value is overwritten before it is read. [redundantInitialization]
    if (!(relocation = group->relocations = wasm_runtime_malloc(size))) {
                     ^
core/iwasm/compilation/aot_emit_aot_file.c:2842:31: note: relocation is initialized
    AOTRelocation *relocation = group->relocations;
                              ^
core/iwasm/compilation/aot_emit_aot_file.c:2857:22: note: relocation is overwritten
    if (!(relocation = group->relocations = wasm_runtime_malloc(size))) {
                     ^
core/iwasm/compilation/aot_emit_aot_file.c:2260:15: style: The scope of the variable 'name' can be reduced. [variableScope]
        char *name;
              ^
core/iwasm/compilation/aot_emit_aot_file.c:2298:11: style: The scope of the variable 'name' can be reduced. [variableScope]
    char *name;
          ^
core/iwasm/compilation/aot_emit_aot_file.c:2347:11: style: The scope of the variable 'name' can be reduced. [variableScope]
    char *name;
          ^
core/iwasm/compilation/aot_emit_aot_file.c:2645:22: style: Checking if unsigned expression '4294967295U' is less than zero. [unsignedLessThanZero]
            if (addr > UINT32_MAX) {
                     ^
core/iwasm/compilation/aot_emit_aot_file.c:2624:72: note: Assuming that condition 'addr!=0' is not redundant
            if (strcmp(sec_name, aot_stack_sizes_section_name) || addr != 0) {
                                                                       ^
core/iwasm/compilation/aot_emit_aot_file.c:2645:22: note: Unsigned less than zero
            if (addr > UINT32_MAX) {
                     ^
core/iwasm/compilation/aot_emit_compare.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_const.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_control.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_conversion.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_exception.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_function.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_function.c:778:17: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
                if (!comp_ctx->is_jit_mode) {
                ^
core/iwasm/compilation/aot_emit_function.c:782:17: note: Found duplicate branches for 'if' and 'else'.
                else {
                ^
core/iwasm/compilation/aot_emit_function.c:778:17: note: Found duplicate branches for 'if' and 'else'.
                if (!comp_ctx->is_jit_mode) {
                ^
core/iwasm/compilation/aot_emit_memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_numberic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_numberic.c:671:13: warning: Conversion of string literal "compile int add fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(compile_int_add(comp_ctx, left, right, is_i32),
            ^
core/iwasm/compilation/aot_emit_numberic.c:675:13: warning: Conversion of string literal "compile int sub fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(compile_int_sub(comp_ctx, left, right, is_i32),
            ^
core/iwasm/compilation/aot_emit_numberic.c:679:13: warning: Conversion of string literal "compile int mul fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(compile_int_mul(comp_ctx, left, right, is_i32),
            ^
core/iwasm/compilation/aot_emit_numberic.c:703:13: warning: Conversion of string literal "llvm build and fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(
            ^
core/iwasm/compilation/aot_emit_numberic.c:708:13: warning: Conversion of string literal "llvm build or fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(LLVMBuildOr(comp_ctx->builder, left, right, "or"),
            ^
core/iwasm/compilation/aot_emit_numberic.c:712:13: warning: Conversion of string literal "llvm build xor fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(
            ^
core/iwasm/compilation/aot_emit_numberic.c:933:17: warning: Conversion of string literal "llvm build fadd fail." to bool always evaluates to true. [incorrectStringBooleanError]
                DEF_FP_BINARY_OP(
                ^
core/iwasm/compilation/aot_emit_numberic.c:948:17: warning: Conversion of string literal "llvm build fsub fail." to bool always evaluates to true. [incorrectStringBooleanError]
                DEF_FP_BINARY_OP(
                ^
core/iwasm/compilation/aot_emit_numberic.c:963:17: warning: Conversion of string literal "llvm build fmul fail." to bool always evaluates to true. [incorrectStringBooleanError]
                DEF_FP_BINARY_OP(
                ^
core/iwasm/compilation/aot_emit_numberic.c:978:17: warning: Conversion of string literal "llvm build fdiv fail." to bool always evaluates to true. [incorrectStringBooleanError]
                DEF_FP_BINARY_OP(
                ^
core/iwasm/compilation/aot_emit_numberic.c:1046:13: warning: Conversion of string literal "llvm build fneg fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_FP_UNARY_OP(LLVMBuildFNeg(comp_ctx->builder, operand, "fneg"),
            ^
core/iwasm/compilation/aot_emit_table.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_emit_variable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_llvm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_llvm.c:3113:16: style: Redundant initialization for 'node'. The initialized value is overwritten before it is read. [redundantInitialization]
    if (!(node = wasm_runtime_malloc(sizeof(AOTCheckedAddr)))) {
               ^
core/iwasm/compilation/aot_llvm.c:3111:26: note: node is initialized
    AOTCheckedAddr *node = func_ctx->checked_addr_list;
                         ^
core/iwasm/compilation/aot_llvm.c:3113:16: note: node is overwritten
    if (!(node = wasm_runtime_malloc(sizeof(AOTCheckedAddr)))) {
               ^
core/iwasm/compilation/aot_llvm.c:1942:11: style: The scope of the variable 'arch' can be reduced. [variableScope]
    char *arch;
          ^
core/iwasm/compilation/aot_llvm.c:1943:10: style: The scope of the variable 'support_eb' can be reduced. [variableScope]
    bool support_eb;
         ^
core/iwasm/compilation/aot_llvm.c:2202:35: style: Variable 'i' is not assigned a value. [unassignedVariable]
    uint32 opt_level, size_level, i;
                                  ^
core/iwasm/compilation/aot_llvm_extra.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/aot_llvm_extra.cpp:86:10: style: The scope of the variable 'Changed' can be reduced. [variableScope]
    bool Changed = false;
         ^
core/iwasm/compilation/aot_llvm_extra2.cpp:142:34: style:inconclusive: Function 'LLVMGetTailCallKind' argument 1 names different: declaration 'CallInst' definition 'Call'. [funcArgNamesDifferent]
LLVMGetTailCallKind(LLVMValueRef Call)
                                 ^
core/iwasm/compilation/aot_llvm_extra2.h:29:34: note: Function 'LLVMGetTailCallKind' argument 1 names different: declaration 'CallInst' definition 'Call'.
LLVMGetTailCallKind(LLVMValueRef CallInst);
                                 ^
core/iwasm/compilation/aot_llvm_extra2.cpp:142:34: note: Function 'LLVMGetTailCallKind' argument 1 names different: declaration 'CallInst' definition 'Call'.
LLVMGetTailCallKind(LLVMValueRef Call)
                                 ^
core/iwasm/compilation/aot_llvm_extra2.cpp:148:34: style:inconclusive: Function 'LLVMSetTailCallKind' argument 1 names different: declaration 'CallInst' definition 'Call'. [funcArgNamesDifferent]
LLVMSetTailCallKind(LLVMValueRef Call, LLVMTailCallKind kind)
                                 ^
core/iwasm/compilation/aot_llvm_extra2.h:31:34: note: Function 'LLVMSetTailCallKind' argument 1 names different: declaration 'CallInst' definition 'Call'.
LLVMSetTailCallKind(LLVMValueRef CallInst, LLVMTailCallKind kind);
                                 ^
core/iwasm/compilation/aot_llvm_extra2.cpp:148:34: note: Function 'LLVMSetTailCallKind' argument 1 names different: declaration 'CallInst' definition 'Call'.
LLVMSetTailCallKind(LLVMValueRef Call, LLVMTailCallKind kind)
                                 ^
core/iwasm/compilation/aot_orc_extra.cpp:93:1: error: There is an unknown macro here somewhere. Configuration is required. If DEFINE_SIMPLE_CONVERSION_FUNCTIONS is a macro then please configure it. [unknownMacro]
DEFINE_SIMPLE_CONVERSION_FUNCTIONS(ExecutionSession, LLVMOrcExecutionSessionRef)
^
core/iwasm/compilation/debug/dwarf_extractor.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/debug/dwarf_extractor.cpp:106:33: style: C-style pointer casting [cstyleCast]
    dwar_extractor *extractor = TO_EXTACTOR(handle);
                                ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:125:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:200:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:297:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:400:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:432:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:460:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:501:23: style: C-style pointer casting [cstyleCast]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                      ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:122:17: style: The scope of the variable 'file_name' can be reduced. [variableScope]
    const char *file_name;
                ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:123:17: style: The scope of the variable 'dir_name' can be reduced. [variableScope]
    const char *dir_name;
                ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:371:29: style: Local variable 'ParamLocation' shadows outer variable [shadowVariable]
            LLVMMetadataRef ParamLocation = LLVMDIBuilderCreateDebugLocation(
                            ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:347:21: note: Shadowed declaration
    LLVMMetadataRef ParamLocation = LLVMDIBuilderCreateDebugLocation(
                    ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:371:29: note: Shadow variable
            LLVMMetadataRef ParamLocation = LLVMDIBuilderCreateDebugLocation(
                            ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:374:29: style: Local variable 'ParamVar' shadows outer variable [shadowVariable]
            LLVMMetadataRef ParamVar = LLVMDIBuilderCreateParameterVariable(
                            ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:356:21: note: Shadowed declaration
    LLVMMetadataRef ParamVar = LLVMDIBuilderCreateParameterVariable(
                    ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:374:29: note: Shadow variable
            LLVMMetadataRef ParamVar = LLVMDIBuilderCreateParameterVariable(
                            ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:380:26: style: Local variable 'Param' shadows outer variable [shadowVariable]
            LLVMValueRef Param =
                         ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:360:18: note: Shadowed declaration
    LLVMValueRef Param = LLVMGetParam(func_ctx->func, 0);
                 ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:380:26: note: Shadow variable
            LLVMValueRef Param =
                         ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:458:19: style: Variable 'func' is assigned a value that is never used. [unreadVariable]
    AOTFunc *func = func_ctx->aot_func;
                  ^
core/iwasm/compilation/debug/dwarf_extractor.cpp:501:21: style: Variable 'extractor' is assigned a value that is never used. [unreadVariable]
    if (!(extractor = TO_EXTACTOR(comp_ctx->comp_data->extractor)))
                    ^
core/iwasm/compilation/simd/simd_access_lanes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_bit_shifts.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_bitmask_extracts.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_bitwise_ops.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_bool_reductions.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_comparisons.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_construct_values.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_construct_values.c:54:30: style:inconclusive: Function 'aot_compile_simd_splat' argument 3 names different: declaration 'splat_opcode' definition 'opcode'. [funcArgNamesDifferent]
                       uint8 opcode)
                             ^
core/iwasm/compilation/simd/simd_construct_values.h:21:30: note: Function 'aot_compile_simd_splat' argument 3 names different: declaration 'splat_opcode' definition 'opcode'.
                       uint8 splat_opcode);
                             ^
core/iwasm/compilation/simd/simd_construct_values.c:54:30: note: Function 'aot_compile_simd_splat' argument 3 names different: declaration 'splat_opcode' definition 'opcode'.
                       uint8 opcode)
                             ^
core/iwasm/compilation/simd/simd_conversions.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_conversions.c:320:68: style:inconclusive: Function 'aot_compile_simd_i16x8_extend_i8x16' argument 3 names different: declaration 'is_low' definition 'lower_half'. [funcArgNamesDifferent]
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.h:29:68: note: Function 'aot_compile_simd_i16x8_extend_i8x16' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool is_low,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:320:68: note: Function 'aot_compile_simd_i16x8_extend_i8x16' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:329:68: style:inconclusive: Function 'aot_compile_simd_i32x4_extend_i16x8' argument 3 names different: declaration 'is_low' definition 'lower_half'. [funcArgNamesDifferent]
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.h:34:68: note: Function 'aot_compile_simd_i32x4_extend_i16x8' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool is_low,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:329:68: note: Function 'aot_compile_simd_i32x4_extend_i16x8' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:720:68: style:inconclusive: Function 'aot_compile_simd_i16x8_extmul_i8x16' argument 3 names different: declaration 'is_low' definition 'lower_half'. [funcArgNamesDifferent]
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.h:74:68: note: Function 'aot_compile_simd_i16x8_extmul_i8x16' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool is_low,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:720:68: note: Function 'aot_compile_simd_i16x8_extmul_i8x16' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:729:68: style:inconclusive: Function 'aot_compile_simd_i32x4_extmul_i16x8' argument 3 names different: declaration 'is_low' definition 'lower_half'. [funcArgNamesDifferent]
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.h:79:68: note: Function 'aot_compile_simd_i32x4_extmul_i16x8' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool is_low,
                                                                   ^
core/iwasm/compilation/simd/simd_conversions.c:729:68: note: Function 'aot_compile_simd_i32x4_extmul_i16x8' argument 3 names different: declaration 'is_low' definition 'lower_half'.
                                    AOTFuncContext *func_ctx, bool lower_half,
                                                                   ^
core/iwasm/compilation/simd/simd_floating_point.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_int_arith.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_int_arith.c:49:45: style:inconclusive: Function 'aot_compile_simd_i8x16_arith' argument 3 names different: declaration 'cond' definition 'arith_op'. [funcArgNamesDifferent]
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.h:17:45: note: Function 'aot_compile_simd_i8x16_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic cond);
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:49:45: note: Function 'aot_compile_simd_i8x16_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:56:45: style:inconclusive: Function 'aot_compile_simd_i16x8_arith' argument 3 names different: declaration 'cond' definition 'arith_op'. [funcArgNamesDifferent]
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.h:21:45: note: Function 'aot_compile_simd_i16x8_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic cond);
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:56:45: note: Function 'aot_compile_simd_i16x8_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:63:45: style:inconclusive: Function 'aot_compile_simd_i32x4_arith' argument 3 names different: declaration 'cond' definition 'arith_op'. [funcArgNamesDifferent]
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.h:25:45: note: Function 'aot_compile_simd_i32x4_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic cond);
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:63:45: note: Function 'aot_compile_simd_i32x4_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:70:45: style:inconclusive: Function 'aot_compile_simd_i64x2_arith' argument 3 names different: declaration 'cond' definition 'arith_op'. [funcArgNamesDifferent]
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_int_arith.h:29:45: note: Function 'aot_compile_simd_i64x2_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic cond);
                                            ^
core/iwasm/compilation/simd/simd_int_arith.c:70:45: note: Function 'aot_compile_simd_i64x2_arith' argument 3 names different: declaration 'cond' definition 'arith_op'.
                             V128Arithmetic arith_op)
                                            ^
core/iwasm/compilation/simd/simd_load_store.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/compilation/simd/simd_sat_int_arith.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:459:23: style: Redundant condition: fp_cmp. '!fp_cmp || (fp_cmp && op==GTS||op==GES)' is equivalent to '!fp_cmp || op==GTS||op==GES' [redundantCondition]
    bh_assert(!fp_cmp || (fp_cmp && (op == GTS || op == GES)));
                      ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:5434:23: style: Redundant condition: fp_cmp. '!fp_cmp || (fp_cmp && op==GTS||op==GES)' is equivalent to '!fp_cmp || op==GTS||op==GES' [redundantCondition]
    bh_assert(!fp_cmp || (fp_cmp && (op == GTS || op == GES)));
                      ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:5504:36: style: C-style pointer casting [cstyleCast]
    JitErrorHandler *err_handler = (JitErrorHandler *)a.code()->errorHandler();
                                   ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:5689:17: style: C-style pointer casting [cstyleCast]
                JMP_TO_LABEL(label_dst, label_src);
                ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:5697:13: style: C-style pointer casting [cstyleCast]
            JMP_TO_LABEL(label_dst, label_src);
            ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:5757:17: style: C-style pointer casting [cstyleCast]
                JMP_TO_LABEL(label_dst, label_src);
                ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:7987:25: style: C-style pointer casting [cstyleCast]
                        JMP_TO_LABEL(jit_reg_no(r0), label_index);
                        ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:709:10: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
    else if (kind_dst == JIT_REG_KIND_F64) {
         ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:713:5: note: Found duplicate branches for 'if' and 'else'.
    else {
    ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:709:10: note: Found duplicate branches for 'if' and 'else'.
    else if (kind_dst == JIT_REG_KIND_F64) {
         ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:5431:11: style: The scope of the variable 'stream' can be reduced. [variableScope]
    char *stream;
          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:6175:11: style: The scope of the variable 'stream' can be reduced. [variableScope]
    char *stream;
          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3213:27: style: Local variable 'hreg_info' shadows outer variable [shadowVariable]
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9417:29: note: Shadowed declaration
static const JitHardRegInfo hreg_info = {
                            ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3213:27: note: Shadow variable
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3240:27: style: Local variable 'hreg_info' shadows outer variable [shadowVariable]
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9417:29: note: Shadowed declaration
static const JitHardRegInfo hreg_info = {
                            ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3240:27: note: Shadow variable
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3403:27: style: Local variable 'hreg_info' shadows outer variable [shadowVariable]
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9417:29: note: Shadowed declaration
static const JitHardRegInfo hreg_info = {
                            ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3403:27: note: Shadow variable
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3430:27: style: Local variable 'hreg_info' shadows outer variable [shadowVariable]
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9417:29: note: Shadowed declaration
static const JitHardRegInfo hreg_info = {
                            ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:3430:27: note: Shadow variable
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9146:27: style: Local variable 'hreg_info' shadows outer variable [shadowVariable]
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9417:29: note: Shadowed declaration
static const JitHardRegInfo hreg_info = {
                            ^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9146:27: note: Shadow variable
    const JitHardRegInfo *hreg_info = jit_codegen_get_hreg_info();
                          ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:295:47: style:inconclusive: Function 'jit_compile_op_i64_extend_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_i64_extend_i32(JitCompContext *cc, bool sign)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:25:47: note: Function 'jit_compile_op_i64_extend_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i64_extend_i32(JitCompContext *comp_ctx, bool sign);
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:295:47: note: Function 'jit_compile_op_i64_extend_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i64_extend_i32(JitCompContext *cc, bool sign)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:315:47: style:inconclusive: Function 'jit_compile_op_i64_extend_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_i64_extend_i64(JitCompContext *cc, int8 bitwidth)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:28:47: note: Function 'jit_compile_op_i64_extend_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i64_extend_i64(JitCompContext *comp_ctx, int8 bitwidth);
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:315:47: note: Function 'jit_compile_op_i64_extend_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i64_extend_i64(JitCompContext *cc, int8 bitwidth)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:358:47: style:inconclusive: Function 'jit_compile_op_i32_extend_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_i32_extend_i32(JitCompContext *cc, int8 bitwidth)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:31:47: note: Function 'jit_compile_op_i32_extend_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i32_extend_i32(JitCompContext *comp_ctx, int8 bitwidth);
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:358:47: note: Function 'jit_compile_op_i32_extend_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i32_extend_i32(JitCompContext *cc, int8 bitwidth)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:471:48: style:inconclusive: Function 'jit_compile_op_f32_convert_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f32_convert_i32(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:40:48: note: Function 'jit_compile_op_f32_convert_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_convert_i32(JitCompContext *comp_ctx, bool sign);
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:471:48: note: Function 'jit_compile_op_f32_convert_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_convert_i32(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:493:48: style:inconclusive: Function 'jit_compile_op_f32_convert_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f32_convert_i64(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:43:48: note: Function 'jit_compile_op_f32_convert_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_convert_i64(JitCompContext *comp_ctx, bool sign);
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:493:48: note: Function 'jit_compile_op_f32_convert_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_convert_i64(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:517:47: style:inconclusive: Function 'jit_compile_op_f32_demote_f64' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f32_demote_f64(JitCompContext *cc)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:46:47: note: Function 'jit_compile_op_f32_demote_f64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_demote_f64(JitCompContext *comp_ctx);
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:517:47: note: Function 'jit_compile_op_f32_demote_f64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_demote_f64(JitCompContext *cc)
                                              ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:534:48: style:inconclusive: Function 'jit_compile_op_f64_convert_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f64_convert_i32(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:49:48: note: Function 'jit_compile_op_f64_convert_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_convert_i32(JitCompContext *comp_ctx, bool sign);
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:534:48: note: Function 'jit_compile_op_f64_convert_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_convert_i32(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:554:48: style:inconclusive: Function 'jit_compile_op_f64_convert_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f64_convert_i64(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:52:48: note: Function 'jit_compile_op_f64_convert_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_convert_i64(JitCompContext *comp_ctx, bool sign);
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:554:48: note: Function 'jit_compile_op_f64_convert_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_convert_i64(JitCompContext *cc, bool sign)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:578:48: style:inconclusive: Function 'jit_compile_op_f64_promote_f32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f64_promote_f32(JitCompContext *cc)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:55:48: note: Function 'jit_compile_op_f64_promote_f32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_promote_f32(JitCompContext *comp_ctx);
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:578:48: note: Function 'jit_compile_op_f64_promote_f32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_promote_f32(JitCompContext *cc)
                                               ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:595:52: style:inconclusive: Function 'jit_compile_op_i64_reinterpret_f64' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_i64_reinterpret_f64(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:58:52: note: Function 'jit_compile_op_i64_reinterpret_f64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i64_reinterpret_f64(JitCompContext *comp_ctx);
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:595:52: note: Function 'jit_compile_op_i64_reinterpret_f64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i64_reinterpret_f64(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:612:52: style:inconclusive: Function 'jit_compile_op_i32_reinterpret_f32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_i32_reinterpret_f32(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:61:52: note: Function 'jit_compile_op_i32_reinterpret_f32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i32_reinterpret_f32(JitCompContext *comp_ctx);
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:612:52: note: Function 'jit_compile_op_i32_reinterpret_f32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_i32_reinterpret_f32(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:629:52: style:inconclusive: Function 'jit_compile_op_f64_reinterpret_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f64_reinterpret_i64(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:64:52: note: Function 'jit_compile_op_f64_reinterpret_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_reinterpret_i64(JitCompContext *comp_ctx);
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:629:52: note: Function 'jit_compile_op_f64_reinterpret_i64' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f64_reinterpret_i64(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:646:52: style:inconclusive: Function 'jit_compile_op_f32_reinterpret_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'. [funcArgNamesDifferent]
jit_compile_op_f32_reinterpret_i32(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.h:67:52: note: Function 'jit_compile_op_f32_reinterpret_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_reinterpret_i32(JitCompContext *comp_ctx);
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_conversion.c:646:52: note: Function 'jit_compile_op_f32_reinterpret_i32' argument 1 names different: declaration 'comp_ctx' definition 'cc'.
jit_compile_op_f32_reinterpret_i32(JitCompContext *cc)
                                                   ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:1535:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:1546:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:1557:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:1568:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:809:13: warning: Conversion of string literal "compile int add fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(compile_int_add(cc, left, right, is_i32),
            ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:813:13: warning: Conversion of string literal "compile int sub fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(compile_int_sub(cc, left, right, is_i32),
            ^
core/iwasm/fast-jit/fe/jit_emit_numberic.c:817:13: warning: Conversion of string literal "compile int mul fail." to bool always evaluates to true. [incorrectStringBooleanError]
            DEF_INT_BINARY_OP(compile_int_mul(cc, left, right, is_i32),
            ^
core/iwasm/fast-jit/jit_codecache.c:59:25: style: Variable 'instance' is not assigned a value. [unassignedVariable]
    WASMModuleInstance *instance;
                        ^
core/iwasm/fast-jit/jit_compiler.c:81:41: style:inconclusive: Function 'jit_compiler_init' argument 1 names different: declaration 'option' definition 'options'. [funcArgNamesDifferent]
jit_compiler_init(const JitCompOptions *options)
                                        ^
core/iwasm/fast-jit/jit_compiler.h:76:41: note: Function 'jit_compiler_init' argument 1 names different: declaration 'option' definition 'options'.
jit_compiler_init(const JitCompOptions *option);
                                        ^
core/iwasm/fast-jit/jit_compiler.c:81:41: note: Function 'jit_compiler_init' argument 1 names different: declaration 'option' definition 'options'.
jit_compiler_init(const JitCompOptions *options)
                                        ^
core/iwasm/fast-jit/jit_compiler.c:287:35: style:inconclusive: Function 'jit_interp_switch_to_jitted' argument 1 names different: declaration 'self' definition 'exec_env'. [funcArgNamesDifferent]
jit_interp_switch_to_jitted(void *exec_env, JitInterpSwitchInfo *info,
                                  ^
core/iwasm/fast-jit/jit_compiler.h:109:35: note: Function 'jit_interp_switch_to_jitted' argument 1 names different: declaration 'self' definition 'exec_env'.
jit_interp_switch_to_jitted(void *self, JitInterpSwitchInfo *info,
                                  ^
core/iwasm/fast-jit/jit_compiler.c:287:35: note: Function 'jit_interp_switch_to_jitted' argument 1 names different: declaration 'self' definition 'exec_env'.
jit_interp_switch_to_jitted(void *exec_env, JitInterpSwitchInfo *info,
                                  ^
core/iwasm/fast-jit/jit_dump.c:215:9: style: Condition '!func_name' is always true [knownConditionTrueFalse]
    if (!func_name) {
        ^
core/iwasm/fast-jit/jit_dump.c:206:29: note: Assignment 'func_name=NULL', assigned value is 0
    const char *func_name = NULL;
                            ^
core/iwasm/fast-jit/jit_dump.c:215:9: note: Condition '!func_name' is always true
    if (!func_name) {
        ^
core/iwasm/fast-jit/jit_dump.c:131:17: style: The scope of the variable 'label_index' can be reduced. [variableScope]
    unsigned i, label_index;
                ^
core/iwasm/fast-jit/jit_dump.c:132:11: style: The scope of the variable 'begin_addr' can be reduced. [variableScope]
    void *begin_addr, *end_addr;
          ^
core/iwasm/fast-jit/jit_dump.c:132:24: style: The scope of the variable 'end_addr' can be reduced. [variableScope]
    void *begin_addr, *end_addr;
                       ^
core/iwasm/fast-jit/jit_dump.c:133:20: style: The scope of the variable 'block_next' can be reduced. [variableScope]
    JitBasicBlock *block_next;
                   ^
core/iwasm/fast-jit/jit_dump.c:238:17: style: The scope of the variable 'end' can be reduced. [variableScope]
    unsigned i, end;
                ^
core/iwasm/fast-jit/jit_dump.c:239:20: style: The scope of the variable 'block' can be reduced. [variableScope]
    JitBasicBlock *block;
                   ^
core/iwasm/fast-jit/jit_frontend.c:414:45: style:inconclusive: Function 'get_table_elems_reg' argument 2 names different: declaration 'table_idx' definition 'tbl_idx'. [funcArgNamesDifferent]
get_table_elems_reg(JitFrame *frame, uint32 tbl_idx)
                                            ^
core/iwasm/fast-jit/jit_frontend.h:217:45: note: Function 'get_table_elems_reg' argument 2 names different: declaration 'table_idx' definition 'tbl_idx'.
get_table_elems_reg(JitFrame *frame, uint32 table_idx);
                                            ^
core/iwasm/fast-jit/jit_frontend.c:414:45: note: Function 'get_table_elems_reg' argument 2 names different: declaration 'table_idx' definition 'tbl_idx'.
get_table_elems_reg(JitFrame *frame, uint32 tbl_idx)
                                            ^
core/iwasm/fast-jit/jit_frontend.c:432:48: style:inconclusive: Function 'get_table_cur_size_reg' argument 2 names different: declaration 'table_idx' definition 'tbl_idx'. [funcArgNamesDifferent]
get_table_cur_size_reg(JitFrame *frame, uint32 tbl_idx)
                                               ^
core/iwasm/fast-jit/jit_frontend.h:220:48: note: Function 'get_table_cur_size_reg' argument 2 names different: declaration 'table_idx' definition 'tbl_idx'.
get_table_cur_size_reg(JitFrame *frame, uint32 table_idx);
                                               ^
core/iwasm/fast-jit/jit_frontend.c:432:48: note: Function 'get_table_cur_size_reg' argument 2 names different: declaration 'table_idx' definition 'tbl_idx'.
get_table_cur_size_reg(JitFrame *frame, uint32 tbl_idx)
                                               ^
core/iwasm/fast-jit/jit_frontend.c:2294:21: style: Variable 'jit_frame' is assigned a value that is never used. [unreadVariable]
    if (!(jit_frame = init_func_translation(cc))) {
                    ^
core/iwasm/fast-jit/jit_ir.c:458:20: style: The scope of the variable 'block' can be reduced. [variableScope]
    JitBasicBlock *block;
                   ^
core/iwasm/fast-jit/jit_ir.c:780:10: style: The scope of the variable 'successful' can be reduced. [variableScope]
    bool successful = true;
         ^
core/iwasm/fast-jit/jit_ir.c:893:14: style: The scope of the variable 'successful' can be reduced. [variableScope]
        bool successful = true;
             ^
core/iwasm/fast-jit/jit_ir.c:936:10: style: The scope of the variable 'successful' can be reduced. [variableScope]
    bool successful = true;
         ^
core/iwasm/interpreter/wasm_interp_classic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/interpreter/wasm_interp_classic.c:158:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/interpreter/wasm_interp_classic.c:169:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/interpreter/wasm_interp_classic.c:180:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/interpreter/wasm_interp_classic.c:191:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/interpreter/wasm_interp_classic.c:889:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[128];
         ^
core/iwasm/interpreter/wasm_interp_classic.c:4123:28: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            argv1 + argc + sizeof(void *) / sizeof(uint32) * ext_ret_count;
                           ^
core/iwasm/interpreter/wasm_interp_classic.c:4127:43: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            *(uintptr_t *)(argv1 + argc + sizeof(void *) / sizeof(uint32) * i) =
                                          ^
core/iwasm/interpreter/wasm_interp_classic.c:4166:28: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
            argv1 + argc + sizeof(void *) / sizeof(uint32) * ext_ret_count;
                           ^
core/iwasm/interpreter/wasm_interp_fast.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/interpreter/wasm_interp_fast.c:119:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/interpreter/wasm_interp_fast.c:130:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/interpreter/wasm_interp_fast.c:141:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? a : b;
                              ^
core/iwasm/interpreter/wasm_interp_fast.c:152:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        return signbit(a) ? b : a;
                              ^
core/iwasm/interpreter/wasm_interp_fast.c:1878:24: style: Variable 'reserved' is not assigned a value. [unassignedVariable]
                uint32 reserved;
                       ^
core/iwasm/interpreter/wasm_interp_fast.c:1887:24: style: Variable 'reserved' is not assigned a value. [unassignedVariable]
                uint32 reserved, delta,
                       ^
core/iwasm/interpreter/wasm_loader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:458:13: note: Address of variable taken here.
            read_leb_int32(p, p_end, init_expr->u.i32);
            ^
core/iwasm/interpreter/wasm_loader.c:458:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_int32(p, p_end, init_expr->u.i32);
            ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:464:13: note: Address of variable taken here.
            read_leb_int64(p, p_end, init_expr->u.i64);
            ^
core/iwasm/interpreter/wasm_loader.c:464:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_int64(p, p_end, init_expr->u.i64);
            ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:529:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, init_expr->u.global_index);
            ^
core/iwasm/interpreter/wasm_loader.c:529:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, init_expr->u.global_index);
            ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:565:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, type_count);
    ^
core/iwasm/interpreter/wasm_loader.c:565:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, type_count);
    ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:583:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, param_count);
            ^
core/iwasm/interpreter/wasm_loader.c:583:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, param_count);
            ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:589:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_loader.c:589:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:614:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_loader.c:614:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:1082:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, declare_type_index);
    ^
core/iwasm/interpreter/wasm_loader.c:1082:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, declare_type_index);
    ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:1174:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, declare_max_size_flag);
    ^
core/iwasm/interpreter/wasm_loader.c:1174:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, declare_max_size_flag);
    ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:117:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:1180:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, declare_init_size);
    ^
core/iwasm/interpreter/wasm_loader.c:1180:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, declare_init_size);
    ^
core/iwasm/interpreter/wasm_loader.c:110:22: note: Assuming condition is false
        if (bcnt + 1 > (maxbits + 6) / 7) {
                     ^
core/iwasm/interpreter/wasm_loader.c:117:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_loader.c:325:41: style: Condition 'chr<=0xEF' is always true [knownConditionTrueFalse]
            else if (chr >= 0xE1 && chr <= 0xEF) {
                                        ^
core/iwasm/interpreter/wasm_loader.c:314:37: note: Assuming that condition 'chr<=0xEF' is not redundant
        else if (chr >= 0xE0 && chr <= 0xEF && p + 2 < p_end) {
                                    ^
core/iwasm/interpreter/wasm_loader.c:325:41: note: Condition 'chr<=0xEF' is always true
            else if (chr >= 0xE1 && chr <= 0xEF) {
                                        ^
core/iwasm/interpreter/wasm_loader.c:43:13: style: The scope of the variable 'args' can be reduced. [variableScope]
    va_list args;
            ^
core/iwasm/interpreter/wasm_loader.c:44:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[128];
         ^
core/iwasm/interpreter/wasm_loader.c:208:11: style: The scope of the variable 'type_str' can be reduced. [variableScope]
    char *type_str[] = { "v128", "f64", "f32", "i64", "i32" };
          ^
core/iwasm/interpreter/wasm_loader.c:4457:35: style:inconclusive: Function 'wasm_loader_find_block_addr' argument 5 names different: declaration 'block_type' definition 'label_type'. [funcArgNamesDifferent]
                            uint8 label_type, uint8 **p_else_addr,
                                  ^
core/iwasm/interpreter/wasm_loader.h:73:35: note: Function 'wasm_loader_find_block_addr' argument 5 names different: declaration 'block_type' definition 'label_type'.
                            uint8 block_type, uint8 **p_else_addr,
                                  ^
core/iwasm/interpreter/wasm_loader.c:4457:35: note: Function 'wasm_loader_find_block_addr' argument 5 names different: declaration 'block_type' definition 'label_type'.
                            uint8 label_type, uint8 **p_else_addr,
                                  ^
core/iwasm/interpreter/wasm_loader.c:7208:12: style: Variable 'table_seg_idx' is not assigned a value. [unassignedVariable]
    uint32 table_seg_idx, data_seg_idx, count, align, mem_offset, i;
           ^
core/iwasm/interpreter/wasm_loader.c:7208:27: style: Variable 'data_seg_idx' is not assigned a value. [unassignedVariable]
    uint32 table_seg_idx, data_seg_idx, count, align, mem_offset, i;
                          ^
core/iwasm/interpreter/wasm_loader.c:3035:22: style: Redundant initialization for 'llvm_jit_options'. The initialized value is overwritten before it is read. [redundantInitialization]
    llvm_jit_options = wasm_runtime_get_llvm_jit_options();
                     ^
core/iwasm/interpreter/wasm_loader.c:2995:37: note: llvm_jit_options is initialized
    LLVMJITOptions llvm_jit_options = wasm_runtime_get_llvm_jit_options();
                                    ^
core/iwasm/interpreter/wasm_loader.c:3035:22: note: llvm_jit_options is overwritten
    llvm_jit_options = wasm_runtime_get_llvm_jit_options();
                     ^
core/iwasm/interpreter/wasm_mini_loader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:290:13: note: Address of variable taken here.
            read_leb_int32(p, p_end, init_expr->u.i32);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:290:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_int32(p, p_end, init_expr->u.i32);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:295:13: note: Address of variable taken here.
            read_leb_int64(p, p_end, init_expr->u.i64);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:295:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_int64(p, p_end, init_expr->u.i64);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:336:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, init_expr->u.global_index);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:336:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, init_expr->u.global_index);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:362:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, type_count);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:362:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, type_count);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:377:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, param_count);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:377:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, param_count);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:383:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:383:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:404:13: note: Address of variable taken here.
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:404:13: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
            read_leb_uint32(p, p_end, result_count);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:476:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, declare_type_index);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:476:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, declare_type_index);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:517:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, declare_max_size_flag);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:517:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, declare_max_size_flag);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: warning: The address of local variable 'p' might be accessed at non-zero index. [objectIndex]
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:518:5: note: Address of variable taken here.
    read_leb_uint32(p, p_end, declare_init_size);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:518:5: note: Calling function 'read_leb', 1st argument '(uint8**)&p' value is lifetime=p
    read_leb_uint32(p, p_end, declare_init_size);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:103:19: note: The address of local variable 'p' might be accessed at non-zero index.
        byte = buf[offset];
                  ^
core/iwasm/interpreter/wasm_mini_loader.c:282:5: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF(p, p_end, 1);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:300:13: warning: Invalid test for overflow 'p+4>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 4);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:308:13: warning: Invalid test for overflow 'p+8>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 8);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:342:5: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF(p, p_end, 1);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:373:13: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 1);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:401:17: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p, p_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:406:17: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p, p_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:508:5: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF(p, p_end, 1);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:596:5: warning: Invalid test for overflow 'p+2>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF(p, p_end, 2);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:630:5: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF(p, p_end, 1);
    ^
core/iwasm/interpreter/wasm_mini_loader.c:739:13: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 1);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:750:21: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                    CHECK_BUF(p, p_end, 1);
                    ^
core/iwasm/interpreter/wasm_mini_loader.c:773:21: warning: Invalid test for overflow 'p+2>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                    CHECK_BUF(p, p_end, 2);
                    ^
core/iwasm/interpreter/wasm_mini_loader.c:824:13: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 1);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:992:17: warning: Invalid test for overflow 'p_code+1>=p_code'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p_code, buf_code_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:1034:17: warning: Invalid test for overflow 'p_code+1>=p_code'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p_code, buf_code_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:1161:13: warning: Invalid test for overflow 'p+2>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 2);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:1237:13: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
            CHECK_BUF(p, p_end, 1);
            ^
core/iwasm/interpreter/wasm_mini_loader.c:2825:9: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
        CHECK_BUF(p, p_end, 1);
        ^
core/iwasm/interpreter/wasm_mini_loader.c:2895:5: warning: Invalid test for overflow 'p+sizeof(uint32)>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF1(p, p_end, sizeof(uint32));
    ^
core/iwasm/interpreter/wasm_mini_loader.c:2902:5: warning: Invalid test for overflow 'p+sizeof(uint32)>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
    CHECK_BUF1(p, p_end, sizeof(uint32));
    ^
core/iwasm/interpreter/wasm_mini_loader.c:3252:17: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p, p_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:3295:17: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p, p_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:6032:17: warning: Invalid test for overflow 'p+1>=p'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always true. [invalidTestForOverflow]
                CHECK_BUF(p, p_end, 1);
                ^
core/iwasm/interpreter/wasm_mini_loader.c:878:13: warning: Possible null pointer dereference: import [nullPointer]
            import->kind = kind;
            ^
core/iwasm/interpreter/wasm_mini_loader.c:875:30: note: Assignment 'import=NULL', assigned value is 0
                    import = NULL;
                             ^
core/iwasm/interpreter/wasm_mini_loader.c:878:13: note: Null pointer dereference
            import->kind = kind;
            ^
core/iwasm/interpreter/wasm_mini_loader.c:879:13: warning: Possible null pointer dereference: import [nullPointer]
            import->u.names.module_name = sub_module_name;
            ^
core/iwasm/interpreter/wasm_mini_loader.c:875:30: note: Assignment 'import=NULL', assigned value is 0
                    import = NULL;
                             ^
core/iwasm/interpreter/wasm_mini_loader.c:879:13: note: Null pointer dereference
            import->u.names.module_name = sub_module_name;
            ^
core/iwasm/interpreter/wasm_mini_loader.c:880:13: warning: Possible null pointer dereference: import [nullPointer]
            import->u.names.field_name = field_name;
            ^
core/iwasm/interpreter/wasm_mini_loader.c:875:30: note: Assignment 'import=NULL', assigned value is 0
                    import = NULL;
                             ^
core/iwasm/interpreter/wasm_mini_loader.c:880:13: note: Null pointer dereference
            import->u.names.field_name = field_name;
            ^
core/iwasm/interpreter/wasm_mini_loader.c:360:15: style: The scope of the variable 'type' can be reduced. [variableScope]
    WASMType *type;
              ^
core/iwasm/interpreter/wasm_mini_loader.c:1113:17: style: The scope of the variable 'memory' can be reduced. [variableScope]
    WASMMemory *memory;
                ^
core/iwasm/interpreter/wasm_mini_loader.c:1206:17: style: The scope of the variable 'export' can be reduced. [variableScope]
    WASMExport *export;
                ^
core/iwasm/interpreter/wasm_mini_loader.c:3100:35: style:inconclusive: Function 'wasm_loader_find_block_addr' argument 5 names different: declaration 'block_type' definition 'label_type'. [funcArgNamesDifferent]
                            uint8 label_type, uint8 **p_else_addr,
                                  ^
core/iwasm/interpreter/wasm_loader.h:73:35: note: Function 'wasm_loader_find_block_addr' argument 5 names different: declaration 'block_type' definition 'label_type'.
                            uint8 block_type, uint8 **p_else_addr,
                                  ^
core/iwasm/interpreter/wasm_mini_loader.c:3100:35: note: Function 'wasm_loader_find_block_addr' argument 5 names different: declaration 'block_type' definition 'label_type'.
                            uint8 label_type, uint8 **p_else_addr,
                                  ^
core/iwasm/interpreter/wasm_mini_loader.c:994:22: style: Variable 'type' is assigned a value that is never used. [unreadVariable]
                type = read_uint8(p_code);
                     ^
core/iwasm/interpreter/wasm_mini_loader.c:1392:36: style: Variable 'table_index' is not assigned a value. [unassignedVariable]
    uint32 table_segment_count, i, table_index, function_count;
                                   ^
core/iwasm/interpreter/wasm_mini_loader.c:1392:49: style: Variable 'function_count' is not assigned a value. [unassignedVariable]
    uint32 table_segment_count, i, table_index, function_count;
                                                ^
core/iwasm/interpreter/wasm_mini_loader.c:5492:42: style: Variable 'u32' is not assigned a value. [unassignedVariable]
    uint32 count, local_idx, global_idx, u32, align, mem_offset, i;
                                         ^
core/iwasm/interpreter/wasm_mini_loader.c:5493:11: style: Variable 'i32' is not assigned a value. [unassignedVariable]
    int32 i32, i32_const = 0;
          ^
core/iwasm/interpreter/wasm_mini_loader.c:5495:19: style: Variable 'u8' is not assigned a value. [unassignedVariable]
    uint8 opcode, u8;
                  ^
core/iwasm/interpreter/wasm_runtime.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/interpreter/wasm_runtime.c:1188:13: style: Expression is always true because 'else if' condition is opposite to previous condition at line 1169. [multiCondition]
        if (!exec_env) {
            ^
core/iwasm/interpreter/wasm_runtime.c:1169:9: note: first condition
    if (exec_env) {
        ^
core/iwasm/interpreter/wasm_runtime.c:1188:13: note: else if condition is opposite to first condition
        if (!exec_env) {
            ^
core/iwasm/interpreter/wasm_runtime.c:1255:13: style: Expression is always true because 'else if' condition is opposite to previous condition at line 1236. [multiCondition]
        if (!exec_env) {
            ^
core/iwasm/interpreter/wasm_runtime.c:1236:9: note: first condition
    if (exec_env) {
        ^
core/iwasm/interpreter/wasm_runtime.c:1255:13: note: else if condition is opposite to first condition
        if (!exec_env) {
            ^
core/iwasm/interpreter/wasm_runtime.c:1054:24: style: Condition '!initialize_func' is always true [knownConditionTrueFalse]
    if (!start_func && !initialize_func && !post_inst_func
                       ^
core/iwasm/interpreter/wasm_runtime.c:1009:45: note: Assignment 'initialize_func=NULL', assigned value is 0
    WASMFunctionInstance *initialize_func = NULL;
                                            ^
core/iwasm/interpreter/wasm_runtime.c:1054:24: note: Condition '!initialize_func' is always true
    if (!start_func && !initialize_func && !post_inst_func
                       ^
core/iwasm/interpreter/wasm_runtime.c:1055:12: style: Condition '!call_ctors_func' is always true [knownConditionTrueFalse]
        && !call_ctors_func) {
           ^
core/iwasm/interpreter/wasm_runtime.c:1011:45: note: Assignment 'call_ctors_func=NULL', assigned value is 0
    WASMFunctionInstance *call_ctors_func = NULL;
                                            ^
core/iwasm/interpreter/wasm_runtime.c:1055:12: note: Condition '!call_ctors_func' is always true
        && !call_ctors_func) {
           ^
core/iwasm/interpreter/wasm_runtime.c:1085:13: style: Condition '!exec_env' is always true [knownConditionTrueFalse]
        if (!exec_env) {
            ^
core/iwasm/interpreter/wasm_runtime.c:1019:29: note: Assignment 'exec_env=NULL', assigned value is 0
    WASMExecEnv *exec_env = NULL, *exec_env_created = NULL;
                            ^
core/iwasm/interpreter/wasm_runtime.c:1055:9: note: Assuming condition is false
        && !call_ctors_func) {
        ^
core/iwasm/interpreter/wasm_runtime.c:1085:13: note: Condition '!exec_env' is always true
        if (!exec_env) {
            ^
core/iwasm/interpreter/wasm_runtime.c:41:13: style: The scope of the variable 'args' can be reduced. [variableScope]
    va_list args;
            ^
core/iwasm/interpreter/wasm_runtime.c:42:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[128];
         ^
core/iwasm/libraries/debug-engine/debug_engine.c:728:69: style:inconclusive: Function 'wasm_debug_instance_get_obj_mem' argument 2 names different: declaration 'addr' definition 'offset'. [funcArgNamesDifferent]
wasm_debug_instance_get_obj_mem(WASMDebugInstance *instance, uint64 offset,
                                                                    ^
core/iwasm/libraries/debug-engine/debug_engine.h:168:69: note: Function 'wasm_debug_instance_get_obj_mem' argument 2 names different: declaration 'addr' definition 'offset'.
wasm_debug_instance_get_obj_mem(WASMDebugInstance *instance, uint64 addr,
                                                                    ^
core/iwasm/libraries/debug-engine/debug_engine.c:728:69: note: Function 'wasm_debug_instance_get_obj_mem' argument 2 names different: declaration 'addr' definition 'offset'.
wasm_debug_instance_get_obj_mem(WASMDebugInstance *instance, uint64 offset,
                                                                    ^
core/iwasm/libraries/debug-engine/debug_engine.c:778:72: style:inconclusive: Function 'wasm_debug_instance_get_linear_mem' argument 2 names different: declaration 'addr' definition 'offset'. [funcArgNamesDifferent]
wasm_debug_instance_get_linear_mem(WASMDebugInstance *instance, uint64 offset,
                                                                       ^
core/iwasm/libraries/debug-engine/debug_engine.h:172:72: note: Function 'wasm_debug_instance_get_linear_mem' argument 2 names different: declaration 'addr' definition 'offset'.
wasm_debug_instance_get_linear_mem(WASMDebugInstance *instance, uint64 addr,
                                                                       ^
core/iwasm/libraries/debug-engine/debug_engine.c:778:72: note: Function 'wasm_debug_instance_get_linear_mem' argument 2 names different: declaration 'addr' definition 'offset'.
wasm_debug_instance_get_linear_mem(WASMDebugInstance *instance, uint64 offset,
                                                                       ^
core/iwasm/libraries/debug-engine/handler.c:136:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[16];
         ^
core/iwasm/libraries/debug-engine/handler.c:138:10: style: The scope of the variable 'ret' can be reduced. [variableScope]
    bool ret;
         ^
core/iwasm/libraries/debug-engine/handler.c:159:10: style: The scope of the variable 'buf' can be reduced. [variableScope]
    char buf[16];
         ^
core/iwasm/libraries/debug-engine/handler.c:161:10: style: The scope of the variable 'ret' can be reduced. [variableScope]
    bool ret;
         ^
core/iwasm/libraries/debug-engine/handler.c:594:10: style: The scope of the variable 'ret' can be reduced. [variableScope]
    bool ret;
         ^
core/iwasm/libraries/debug-engine/handler.c:624:12: style: The scope of the variable 'hex_len' can be reduced. [variableScope]
    size_t hex_len;
           ^
core/iwasm/libraries/debug-engine/handler.c:627:11: style: The scope of the variable 'buff' can be reduced. [variableScope]
    char *buff;
          ^
core/iwasm/libraries/debug-engine/handler.c:628:10: style: The scope of the variable 'ret' can be reduced. [variableScope]
    bool ret;
         ^
core/iwasm/libraries/debug-engine/handler.c:437:13: style: Variable 'len' is assigned a value that is never used. [unreadVariable]
        len += snprintf(tmpbuf + len, MAX_PACKET_SIZE - len, ";");
            ^
core/iwasm/libraries/debug-engine/handler.c:441:17: style: Variable 'len' is assigned a value that is never used. [unreadVariable]
            len += snprintf(tmpbuf + len, MAX_PACKET_SIZE - len,
                ^
core/iwasm/libraries/debug-engine/handler.c:446:17: style: Variable 'len' is assigned a value that is never used. [unreadVariable]
            len += snprintf(tmpbuf + len, MAX_PACKET_SIZE - len,
                ^
core/iwasm/libraries/debug-engine/handler.c:451:17: style: Variable 'len' is assigned a value that is never used. [unreadVariable]
            len += snprintf(tmpbuf + len, MAX_PACKET_SIZE - len,
                ^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:350:25: style: The scope of the variable 'node' can be reduced. [variableScope]
    ThreadKeyValueNode *node, *next;
                        ^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:431:10: style: The scope of the variable 'ret' can be reduced. [variableScope]
    bool ret;
         ^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:136:21: style: struct member 'SemCallbackArgs::node' is never used. [unusedStructMember]
    ThreadInfoNode *node;
                    ^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:1107:36: style: Variable 'module_inst' is assigned a value that is never used. [unreadVariable]
    wasm_module_inst_t module_inst = get_module_inst(exec_env);
                                   ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:539:9: style: Condition 'addr_info_size' is always true [knownConditionTrueFalse]
    if (addr_info_size) {
        ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:524:24: note: Assuming that condition 'addr_info_size==0' is not redundant
    if (addr_info_size == 0) {
                       ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:539:9: note: Condition 'addr_info_size' is always true
    if (addr_info_size) {
        ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:66:20: warning: Either the condition 'NULL==addr' is redundant or there is possible null pointer dereference: sock_addr. [nullPointerRedundantCheck]
    if (AF_INET == sock_addr->sa_family) {
                   ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:185:14: note: Assuming that condition 'NULL==addr' is not redundant
    if (NULL == addr) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:189:35: note: Calling function 'sockaddr_to_wasi_addr', 1st argument 'addr' value is 0
    error = sockaddr_to_wasi_addr(addr, addrlen, &wasi_addr);
                                  ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:66:20: note: Null pointer dereference
    if (AF_INET == sock_addr->sa_family) {
                   ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:226:48: warning: Either the condition 'NULL==msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
                                             * msg->msg_iovlen))) {
                                               ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:215:14: note: Assuming that condition 'NULL==msg' is not redundant
    if (NULL == msg) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:226:48: note: Null pointer dereference
                                             * msg->msg_iovlen))) {
                                               ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:230:21: warning: Either the condition 'NULL==msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
    for (i = 0; i < msg->msg_iovlen; i++) {
                    ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:215:14: note: Assuming that condition 'NULL==msg' is not redundant
    if (NULL == msg) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:230:21: note: Null pointer dereference
    for (i = 0; i < msg->msg_iovlen; i++) {
                    ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:236:62: warning: Either the condition 'NULL==msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
    __wasi_errno_t error = __wasi_sock_recv(sockfd, ri_data, msg->msg_iovlen, 0,
                                                             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:215:14: note: Assuming that condition 'NULL==msg' is not redundant
    if (NULL == msg) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:236:62: note: Null pointer dereference
    __wasi_errno_t error = __wasi_sock_recv(sockfd, ri_data, msg->msg_iovlen, 0,
                                                             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:263:49: warning: Either the condition 'NULL==msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
                                              * msg->msg_iovlen))) {
                                                ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:252:14: note: Assuming that condition 'NULL==msg' is not redundant
    if (NULL == msg) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:263:49: note: Null pointer dereference
                                              * msg->msg_iovlen))) {
                                                ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:267:21: warning: Either the condition 'NULL==msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
    for (i = 0; i < msg->msg_iovlen; i++) {
                    ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:252:14: note: Assuming that condition 'NULL==msg' is not redundant
    if (NULL == msg) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:267:21: note: Null pointer dereference
    for (i = 0; i < msg->msg_iovlen; i++) {
                    ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:274:43: warning: Either the condition 'NULL==msg' is redundant or there is possible null pointer dereference: msg. [nullPointerRedundantCheck]
        __wasi_sock_send(sockfd, si_data, msg->msg_iovlen, 0, &so_datalen);
                                          ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:252:14: note: Assuming that condition 'NULL==msg' is not redundant
    if (NULL == msg) {
             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:274:43: note: Null pointer dereference
        __wasi_sock_send(sockfd, si_data, msg->msg_iovlen, 0, &so_datalen);
                                          ^
core/iwasm/libraries/lib-socket/test/tcp_udp.c:172:49: warning: Assert statement calls a function which may have desired side effects: 'server'. [assertWithSideEffect]
    assert(pthread_create(&server_thread, NULL, server, (void *)&args) == 0);
                                                ^
core/iwasm/libraries/lib-socket/test/tcp_udp.c:90:37: warning:inconclusive: Found suspicious operator '&&' [constStatement]
    (args->protocol == SOCK_STREAM) && listen(server_sock, 1);
                                    ^
core/iwasm/libraries/lib-wasi-threads/test/create_threads_until_limit.c:116:13: style: Local variable 'thread_id' shadows outer variable [shadowVariable]
        int thread_id = -1;
            ^
core/iwasm/libraries/lib-wasi-threads/test/create_threads_until_limit.c:83:9: note: Shadowed declaration
    int thread_id = __wasi_thread_spawn(&data_fail);
        ^
core/iwasm/libraries/lib-wasi-threads/test/create_threads_until_limit.c:116:13: note: Shadow variable
        int thread_id = -1;
            ^
core/iwasm/libraries/libc-uvwasi/libc_uvwasi_wrapper.c:616:13: style: Local variable 'i' shadows outer variable [shadowVariable]
        int i;
            ^
core/iwasm/libraries/libc-uvwasi/libc_uvwasi_wrapper.c:584:12: note: Shadowed declaration
    uint32 i;
           ^
core/iwasm/libraries/libc-uvwasi/libc_uvwasi_wrapper.c:616:13: note: Shadow variable
        int i;
            ^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 67 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3236:22: style: Variable 'optlen' is assigned a value that is never used. [unreadVariable]
    socklen_t optlen = sizeof(optval);
                     ^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3416:16: style: Variable 'optval' is assigned a value that is never used. [unreadVariable]
    int optval = reuse;
               ^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:210:0: information: Skipping configuration 'CLOCK_PROCESS_CPUTIME_ID' since the value of 'CLOCK_PROCESS_CPUTIME_ID' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            *out = CLOCK_PROCESS_CPUTIME_ID;
^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:218:0: information: Skipping configuration 'CLOCK_THREAD_CPUTIME_ID' since the value of 'CLOCK_THREAD_CPUTIME_ID' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            *out = CLOCK_THREAD_CPUTIME_ID;
^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/random.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/random.c:91:30: style: Opposite expression on both sides of '%'. [oppositeExpression]
    uintmax_t lower = -upper % upper;
                             ^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/str.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:917:18: style: The scope of the variable 'node' can be reduced. [variableScope]
    WASMExecEnv *node;
                 ^
core/iwasm/libraries/thread-mgr/thread_manager.c:773:35: error: Uninitialized variable: c_api_func_imports [uninitvar]
    if (import_func_count != 0 && c_api_func_imports) {
                                  ^
core/iwasm/libraries/thread-mgr/thread_manager.c:744:26: style: Variable 'size_in_bytes' is assigned a value that is never used. [unreadVariable]
    uint32 size_in_bytes = 0;
                         ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:36:5: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    NN_DBG_PRINTF("Graph builder array contains %d elements",
    ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:64:9: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        NN_DBG_PRINTF("Graph builder %d contains %d elements", i,
        ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:146:9: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        NN_DBG_PRINTF("Dimension %d: %d", i, dimensions->buf[i]);
        ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:149:5: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    NN_DBG_PRINTF("Total number of elements: %d", total_elements);
    ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:109:6: warning: Either the condition 'dimensions==NULL' is redundant or there is possible null pointer dereference: dimensions. [nullPointerRedundantCheck]
    *dimensions =
     ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:111:20: note: Assuming that condition 'dimensions==NULL' is not redundant
    if (dimensions == NULL)
                   ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:109:6: note: Null pointer dereference
    *dimensions =
     ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:27:58: style:inconclusive: Function 'graph_builder_array_app_native' argument 2 names different: declaration 'builder' definition 'builder_array_wasm'. [funcArgNamesDifferent]
                               graph_builder_array_wasm *builder_array_wasm,
                                                         ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.h:44:58: note: Function 'graph_builder_array_app_native' argument 2 names different: declaration 'builder' definition 'builder_array_wasm'.
                               graph_builder_array_wasm *builder,
                                                         ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:27:58: note: Function 'graph_builder_array_app_native' argument 2 names different: declaration 'builder' definition 'builder_array_wasm'.
                               graph_builder_array_wasm *builder_array_wasm,
                                                         ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:28:53: style:inconclusive: Function 'graph_builder_array_app_native' argument 3 names different: declaration 'builder_native' definition 'builder_array'. [funcArgNamesDifferent]
                               graph_builder_array *builder_array)
                                                    ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.h:45:53: note: Function 'graph_builder_array_app_native' argument 3 names different: declaration 'builder_native' definition 'builder_array'.
                               graph_builder_array *builder_native);
                                                    ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:28:53: note: Function 'graph_builder_array_app_native' argument 3 names different: declaration 'builder_native' definition 'builder_array'.
                               graph_builder_array *builder_array)
                                                    ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:123:38: warning: Function 'tensor_app_native' argument order different: declaration 'instance, input_tensor, input_tensor_native' definition 'instance, input_tensor_wasm, input_tensor' [funcArgOrderDifferent]
tensor_app_native(wasm_module_inst_t instance, tensor_wasm *input_tensor_wasm,
                                     ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.h:48:38: note: Function 'tensor_app_native' argument order different: declaration 'instance, input_tensor, input_tensor_native' definition 'instance, input_tensor_wasm, input_tensor'
tensor_app_native(wasm_module_inst_t instance, tensor_wasm *input_tensor,
                                     ^
core/iwasm/libraries/wasi-nn/src/utils/wasi_nn_app_native.c:123:38: note: Function 'tensor_app_native' argument order different: declaration 'instance, input_tensor, input_tensor_native' definition 'instance, input_tensor_wasm, input_tensor'
tensor_app_native(wasm_module_inst_t instance, tensor_wasm *input_tensor_wasm,
                                     ^
core/iwasm/libraries/wasi-nn/src/wasi_nn_tensorflowlite.cpp:226:29: style: Variable 'use_default' is assigned a value that is never used. [unreadVariable]
                use_default = true;
                            ^
core/iwasm/libraries/wasi-nn/src/wasi_nn_tensorflowlite.cpp:210:29: style: Variable 'use_default' is assigned a value that is never used. [unreadVariable]
                use_default = true;
                            ^
core/iwasm/libraries/wasi-nn/test/utils.c:77:19: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    tensor.data = (uint8_t *)input_tensor;
                  ^
core/iwasm/libraries/wasi-nn/test/utils.c:94:35: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    return get_output(ctx, index, (uint8_t *)out_tensor, out_size);
                                  ^
core/iwasm/libraries/wasi-nn/test/utils.c:30:16: style: Checking if unsigned expression 'result' is less than zero. [unsignedLessThanZero]
    if (result <= 0) {
               ^
core/shared/mem-alloc/ems/ems_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
core/shared/mem-alloc/ems/ems_hmu.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
core/shared/mem-alloc/ems/ems_kfc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
core/shared/platform/common/freertos/freertos_thread.c:173:5: error: Division by zero. [zerodiv]
    bh_assert(thread_data != NULL);
    ^
core/shared/platform/common/freertos/freertos_thread.c:173:5: note: Assignment '_count=1', assigned value is 1
    bh_assert(thread_data != NULL);
    ^
core/shared/platform/common/freertos/freertos_thread.c:173:5: note: Division by zero
    bh_assert(thread_data != NULL);
    ^
core/shared/platform/common/math/math.c:1411:20: style: Condition 'ix>=0x3ff00000' is always true [knownConditionTrueFalse]
            if (ix >= 0x3ff00000)
                   ^
core/shared/platform/common/math/math.c:1409:20: note: Assuming that condition 'ix<=0x3fefffff' is not redundant
            if (ix <= 0x3fefffff)
                   ^
core/shared/platform/common/math/math.c:1411:20: note: Condition 'ix>=0x3ff00000' is always true
            if (ix >= 0x3ff00000)
                   ^
core/shared/platform/common/math/math.c:544:21: style: Opposite expression on both sides of '|'. [oppositeExpression]
    if (((ix | ((lx | -lx) >> 31)) > 0x7ff00000)
                    ^
core/shared/platform/common/math/math.c:545:24: style: Opposite expression on both sides of '|'. [oppositeExpression]
        || ((iy | ((ly | -ly) >> 31)) > 0x7ff00000)) /* x or y is NaN */
                       ^
core/shared/platform/common/math/math.c:644:28: style: Same expression on both sides of '/'. [duplicateExpression]
            return (x - x) / (x - x); /* sqrt(-ve) = sNaN */
                           ^
core/shared/platform/common/math/math.c:714:28: style: Same expression on both sides of '/'. [duplicateExpression]
            return (x - x) / (x - x); /* sqrt(-ve) = sNaN */
                           ^
core/shared/platform/common/math/math.c:943:24: style: Opposite expression on both sides of '|'. [oppositeExpression]
            i0 |= ((i1 | -i1) >> 12) & 0x80000;
                       ^
core/shared/platform/common/math/math.c:1383:33: style: Same expression on both sides of '/'. [duplicateExpression]
                    z = (z - z) / (z - z); /* (-1)**non-int is NaN */
                                ^
core/shared/platform/common/math/math.c:1400:24: style: Same expression on both sides of '/'. [duplicateExpression]
        return (x - x) / (x - x);
                       ^
core/shared/platform/common/math/math.c:629:26: style: The scope of the variable 't' can be reduced. [variableScope]
    int32_t ix, s, q, m, t, i;
                         ^
core/shared/platform/common/math/math.c:629:29: style: The scope of the variable 'i' can be reduced. [variableScope]
    int32_t ix, s, q, m, t, i;
                            ^
core/shared/platform/common/math/math.c:699:31: style: The scope of the variable 'i' can be reduced. [variableScope]
    int32_t ix0, s0, q, m, t, i;
                              ^
core/shared/platform/common/math/math.c:700:18: style: The scope of the variable 't1' can be reduced. [variableScope]
    u_int32_t r, t1, s1, ix1, q1;
                 ^
core/shared/platform/common/math/math.c:933:15: style: The scope of the variable 't' can be reduced. [variableScope]
    double w, t;
              ^
core/shared/platform/common/math/math.c:1067:11: style: The scope of the variable 'w' can be reduced. [variableScope]
    float w, t;
          ^
core/shared/platform/common/math/math.c:1067:14: style: The scope of the variable 't' can be reduced. [variableScope]
    float w, t;
             ^
core/shared/platform/common/math/math.c:1296:19: style: The scope of the variable 'z_h' can be reduced. [variableScope]
    double z, ax, z_h, z_l, p_h, p_l;
                  ^
core/shared/platform/common/math/math.c:1296:24: style: The scope of the variable 'z_l' can be reduced. [variableScope]
    double z, ax, z_h, z_l, p_h, p_l;
                       ^
core/shared/platform/common/math/math.c:813:15: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    j0 = ((i0 >> 20) & 0x7ff) - 0x3ff;
              ^
core/shared/platform/common/math/math.c:1136:15: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    j0 = ((i0 >> 23) & 0xff) - 0x7f;
              ^
core/shared/platform/common/math/math.c:994:22: style:inconclusive: Function 'freebsd_isnan' argument 1 names different: declaration 'x' definition 'd'. [funcArgNamesDifferent]
freebsd_isnan(double d)
                     ^
core/shared/platform/common/math/math.c:461:22: note: Function 'freebsd_isnan' argument 1 names different: declaration 'x' definition 'd'.
freebsd_isnan(double x);
                     ^
core/shared/platform/common/math/math.c:994:22: note: Function 'freebsd_isnan' argument 1 names different: declaration 'x' definition 'd'.
freebsd_isnan(double d)
                     ^
core/shared/platform/common/math/math.c:549:14: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    m = ((hy >> 31) & 1) | ((hx >> 30) & 2); /* 2*sign(x)+sign(y) */
             ^
core/shared/platform/common/math/math.c:935:14: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    sx = (i0 >> 31) & 1;
             ^
core/shared/platform/common/math/math.c:948:13: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
            SET_HIGH_WORD(t, (i0 & 0x7fffffff) | (sx << 31));
            ^
core/shared/platform/common/math/math.c:1069:14: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    sx = (i0 >> 31) & 1;
             ^
core/shared/platform/common/math/math.c:1078:13: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
            SET_FLOAT_WORD(t, (i0 & 0x7fffffff) | (sx << 31));
            ^
core/shared/platform/common/math/math.c:1333:24: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1331. [shiftTooManyBitsSigned]
                if ((j << (52 - k)) == ly)
                       ^
core/shared/platform/common/math/math.c:1331:19: note: Assuming that condition 'k>20' is not redundant
            if (k > 20) {
                  ^
core/shared/platform/common/math/math.c:1333:24: note: Shift
                if ((j << (52 - k)) == ly)
                       ^
core/shared/platform/common/math/math.c:62:19: style: struct member 'Anonymous1::w' is never used. [unusedStructMember]
        u_int64_t w;
                  ^
core/shared/platform/common/math/math.c:73:19: style: struct member 'Anonymous3::w' is never used. [unusedStructMember]
        u_int64_t w;
                  ^
core/shared/platform/common/posix/posix_socket.c:279:16: warning: Either the condition 'src_addr' is redundant or there is possible null pointer dereference: src_addr. [nullPointerRedundantCheck]
        memset(src_addr, 0, sizeof(*src_addr));
               ^
core/shared/platform/common/posix/posix_socket.c:272:9: note: Assuming that condition 'src_addr' is not redundant
    if (src_addr && socklen > 0) {
        ^
core/shared/platform/common/posix/posix_socket.c:279:16: note: Null pointer dereference
        memset(src_addr, 0, sizeof(*src_addr));
               ^
core/shared/platform/common/posix/posix_socket.c:645:20: style: Variable 'time_s_int' is assigned a value that is never used. [unreadVariable]
    int time_s_int = (int)time_s;
                   ^
core/shared/platform/common/posix/posix_socket.c:672:26: style: Variable 'time_s_len' is assigned a value that is never used. [unreadVariable]
    socklen_t time_s_len = sizeof(time_s_int);
                         ^
core/shared/platform/common/posix/posix_socket.c:697:20: style: Variable 'time_s_int' is assigned a value that is never used. [unreadVariable]
    int time_s_int = (int)time_s;
                   ^
core/shared/platform/common/posix/posix_socket.c:764:0: information: Skipping configuration 'IPPROTO_IPV6' since the value of 'IPPROTO_IPV6' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return os_socket_setbooloption(socket, IPPROTO_IPV6,
^
core/shared/platform/common/posix/posix_socket.c:782:0: information: Skipping configuration 'IPPROTO_IPV6' since the value of 'IPPROTO_IPV6' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return os_socket_getbooloption(socket, IPPROTO_IPV6,
^
core/shared/platform/common/posix/posix_socket.c:809:0: information: Skipping configuration 'IPPROTO_IPV6' since the value of 'IPPROTO_IPV6' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (setsockopt(socket, IPPROTO_IPV6, IPV6_JOIN_GROUP, &mreq,
^
core/shared/platform/common/posix/posix_socket.c:847:0: information: Skipping configuration 'IPPROTO_IPV6' since the value of 'IPPROTO_IPV6' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (setsockopt(socket, IPPROTO_IPV6, IPV6_LEAVE_GROUP, &mreq,
^
core/shared/platform/common/posix/posix_socket.c:919:0: information: Skipping configuration 'IPPROTO_IPV6' since the value of 'IPPROTO_IPV6' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_setbooloption(socket, IPPROTO_IPV6, IPV6_V6ONLY,
^
core/shared/platform/common/posix/posix_socket.c:931:0: information: Skipping configuration 'IPPROTO_IPV6' since the value of 'IPPROTO_IPV6' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_getbooloption(socket, IPPROTO_IPV6, IPV6_V6ONLY,
^
core/shared/platform/common/posix/posix_socket.c:550:0: information: Skipping configuration 'SO_REUSEPORT' since the value of 'SO_REUSEPORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_setbooloption(socket, SOL_SOCKET, SO_REUSEPORT,
^
core/shared/platform/common/posix/posix_socket.c:562:0: information: Skipping configuration 'SO_REUSEPORT' since the value of 'SO_REUSEPORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_getbooloption(socket, SOL_SOCKET, SO_REUSEPORT,
^
core/shared/platform/common/posix/posix_socket.c:737:0: information: Skipping configuration 'TCP_FASTOPEN_CONNECT' since the value of 'TCP_FASTOPEN_CONNECT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_setbooloption(socket, IPPROTO_TCP, TCP_FASTOPEN_CONNECT,
^
core/shared/platform/common/posix/posix_socket.c:750:0: information: Skipping configuration 'TCP_FASTOPEN_CONNECT' since the value of 'TCP_FASTOPEN_CONNECT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_getbooloption(socket, IPPROTO_TCP, TCP_FASTOPEN_CONNECT,
^
core/shared/platform/common/posix/posix_socket.c:654:0: information: Skipping configuration 'TCP_KEEPALIVE' since the value of 'TCP_KEEPALIVE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (setsockopt(socket, IPPROTO_TCP, TCP_KEEPALIVE, &time_s_int,
^
core/shared/platform/common/posix/posix_socket.c:681:0: information: Skipping configuration 'TCP_KEEPALIVE' since the value of 'TCP_KEEPALIVE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (getsockopt(socket, IPPROTO_TCP, TCP_KEEPALIVE, &time_s_int, &time_s_len)
^
core/shared/platform/common/posix/posix_socket.c:647:0: information: Skipping configuration 'TCP_KEEPIDLE' since the value of 'TCP_KEEPIDLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (setsockopt(socket, IPPROTO_TCP, TCP_KEEPIDLE, &time_s_int,
^
core/shared/platform/common/posix/posix_socket.c:674:0: information: Skipping configuration 'TCP_KEEPIDLE' since the value of 'TCP_KEEPIDLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (getsockopt(socket, IPPROTO_TCP, TCP_KEEPIDLE, &time_s_int, &time_s_len)
^
core/shared/platform/common/posix/posix_socket.c:699:0: information: Skipping configuration 'TCP_KEEPINTVL' since the value of 'TCP_KEEPINTVL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (setsockopt(socket, IPPROTO_TCP, TCP_KEEPINTVL, &time_s_int,
^
core/shared/platform/common/posix/posix_socket.c:720:0: information: Skipping configuration 'TCP_KEEPINTVL' since the value of 'TCP_KEEPINTVL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (getsockopt(socket, IPPROTO_TCP, TCP_KEEPINTVL, &time_s_int, &time_s_len)
^
core/shared/platform/common/posix/posix_socket.c:620:0: information: Skipping configuration 'TCP_QUICKACK' since the value of 'TCP_QUICKACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_setbooloption(socket, IPPROTO_TCP, TCP_QUICKACK,
^
core/shared/platform/common/posix/posix_socket.c:633:0: information: Skipping configuration 'TCP_QUICKACK' since the value of 'TCP_QUICKACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return os_socket_getbooloption(socket, IPPROTO_TCP, TCP_QUICKACK,
^
core/shared/platform/common/posix/posix_thread.c:372:10: style: Variable 'self' is assigned a value that is never used. [unreadVariable]
    self = pthread_self();
         ^
core/shared/platform/common/posix/posix_thread.c:377:24: style: Variable 'max_stack_size' is assigned a value that is never used. [unreadVariable]
        max_stack_size = APP_THREAD_STACK_SIZE_DEFAULT;
                       ^
core/shared/platform/common/posix/posix_thread.c:363:12: style: Unused variable: stack_size [unusedVariable]
    size_t stack_size, max_stack_size;
           ^
core/shared/platform/common/posix/posix_thread.c:351:0: information: Skipping configuration 'os_thread_local_attribute' since the value of 'os_thread_local_attribute' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static os_thread_local_attribute uint8 *thread_stack_boundary = NULL;
^
core/shared/platform/darwin/platform_init.c:28:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret += BH_VPRINTF(format, ap);
^
core/shared/platform/darwin/platform_init.c:41:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return BH_VPRINTF(format, ap);
^
core/shared/platform/linux/platform_init.c:28:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret += BH_VPRINTF(format, ap);
^
core/shared/platform/linux/platform_init.c:41:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return BH_VPRINTF(format, ap);
^
core/shared/platform/esp-idf/espidf_malloc.c:63:5: error: Memory leak: mem_new [memleak]
    return ptr;
    ^
core/shared/platform/esp-idf/espidf_malloc.c:69:11: style: The scope of the variable 'mem_origin' can be reduced. [variableScope]
    void *mem_origin;
          ^
core/shared/platform/esp-idf/espidf_malloc.c:70:16: style: The scope of the variable 'addr_field' can be reduced. [variableScope]
    uintptr_t *addr_field;
               ^
core/shared/platform/esp-idf/espidf_malloc.c:20:28: portability: 'buf_origin' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    buf_fixed = buf_origin + sizeof(void *);
                           ^
core/shared/platform/esp-idf/espidf_malloc.c:22:52: portability: 'buf_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        buf_fixed = (void *)((uintptr_t)(buf_fixed + 8) & (~(uintptr_t)7));
                                                   ^
core/shared/platform/esp-idf/espidf_malloc.c:25:28: portability: 'buf_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    addr_field = buf_fixed - sizeof(uintptr_t);
                           ^
core/shared/platform/esp-idf/espidf_malloc.c:43:22: portability: 'ptr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    addr_field = ptr - sizeof(uintptr_t);
                     ^
core/shared/platform/esp-idf/espidf_malloc.c:51:33: portability: 'mem_new' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        mem_new_fixed = mem_new + sizeof(uintptr_t);
                                ^
core/shared/platform/esp-idf/espidf_malloc.c:54:46: portability: 'mem_new' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                (void *)((uintptr_t)(mem_new + 8) & (~(uintptr_t)7));
                                             ^
core/shared/platform/esp-idf/espidf_malloc.c:57:36: portability: 'mem_new_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        addr_field = mem_new_fixed - sizeof(uintptr_t);
                                   ^
core/shared/platform/esp-idf/espidf_malloc.c:73:26: portability: 'ptr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        addr_field = ptr - sizeof(uintptr_t);
                         ^
core/shared/platform/esp-idf/espidf_memmap.c:21:38: portability: 'buf_origin' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        void *buf_fixed = buf_origin + sizeof(void *);
                                     ^
core/shared/platform/esp-idf/espidf_memmap.c:23:56: portability: 'buf_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            buf_fixed = (void *)((uintptr_t)(buf_fixed + 4) & (~(uintptr_t)7));
                                                       ^
core/shared/platform/esp-idf/espidf_memmap.c:26:43: portability: 'buf_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        uintptr_t *addr_field = buf_fixed - sizeof(uintptr_t);
                                          ^
core/shared/platform/freebsd/platform_init.c:28:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret += BH_VPRINTF(format, ap);
^
core/shared/platform/freebsd/platform_init.c:41:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return BH_VPRINTF(format, ap);
^
core/shared/platform/linux-sgx/sgx_file.c:248:31: style: The scope of the variable 'size_read' can be reduced. [variableScope]
    int size_read_max = 2048, size_read, total_size_read = 0, count, i;
                              ^
core/shared/platform/linux-sgx/sgx_file.c:245:32: style:inconclusive: Function 'read' argument 3 names different: declaration 'count' definition 'size'. [funcArgNamesDifferent]
read(int fd, void *buf, size_t size)
                               ^
core/shared/platform/linux-sgx/sgx_file.h:185:32: note: Function 'read' argument 3 names different: declaration 'count' definition 'size'.
read(int fd, void *buf, size_t count);
                               ^
core/shared/platform/linux-sgx/sgx_file.c:245:32: note: Function 'read' argument 3 names different: declaration 'count' definition 'size'.
read(int fd, void *buf, size_t size)
                               ^
core/shared/platform/linux-sgx/sgx_socket.c:84:16: style: Condition '*c==0x04' is always false [knownConditionTrueFalse]
    return (*c == 0x04) ? true : false;
               ^
core/shared/platform/linux-sgx/sgx_socket.c:82:14: note: Assignment 'i=0x01020304', assigned value is 16909060
    long i = 0x01020304;
             ^
core/shared/platform/linux-sgx/sgx_socket.c:84:16: note: Condition '*c==0x04' is always false
    return (*c == 0x04) ? true : false;
               ^
core/shared/platform/linux-sgx/untrusted/file.c:300:9: style: Unused variable: ret [unusedVariable]
    int ret;
        ^
core/shared/platform/linux-sgx/untrusted/socket.c:29:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
core/shared/platform/linux-sgx/untrusted/socket.c:53:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
core/shared/platform/linux-sgx/untrusted/socket.c:33:33: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        msg->msg_name = msg_buf + (unsigned)(uintptr_t)msg->msg_name;
                                ^
core/shared/platform/linux-sgx/untrusted/socket.c:36:36: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        msg->msg_control = msg_buf + (unsigned)(uintptr_t)msg->msg_control;
                                   ^
core/shared/platform/linux-sgx/untrusted/socket.c:39:32: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        msg->msg_iov = msg_buf + (unsigned)(uintptr_t)msg->msg_iov;
                               ^
core/shared/platform/linux-sgx/untrusted/socket.c:42:25: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                msg_buf + (unsigned)(uintptr_t)msg->msg_iov[i].iov_base;
                        ^
core/shared/platform/linux-sgx/untrusted/socket.c:57:33: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        msg->msg_name = msg_buf + (unsigned)(uintptr_t)msg->msg_name;
                                ^
core/shared/platform/linux-sgx/untrusted/socket.c:60:36: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        msg->msg_control = msg_buf + (unsigned)(uintptr_t)msg->msg_control;
                                   ^
core/shared/platform/linux-sgx/untrusted/socket.c:63:32: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        msg->msg_iov = msg_buf + (unsigned)(uintptr_t)msg->msg_iov;
                               ^
core/shared/platform/linux-sgx/untrusted/socket.c:66:25: portability: 'msg_buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                msg_buf + (unsigned)(uintptr_t)msg->msg_iov[i].iov_base;
                        ^
core/shared/platform/linux-sgx/untrusted/socket.c:30:13: style: Unused variable: ret [unusedVariable]
    ssize_t ret;
            ^
core/shared/platform/linux-sgx/untrusted/socket.c:54:13: style: Unused variable: ret [unusedVariable]
    ssize_t ret;
            ^
core/shared/platform/riot/riot_thread.c:107:28: warning: Either the condition 'p->next==thread_data' is redundant or there is possible null pointer dereference: p->next. [nullPointerRedundantCheck]
                p->next = p->next->next;
                           ^
core/shared/platform/riot/riot_thread.c:106:30: note: Assuming that condition 'p->next==thread_data' is not redundant
            if (p && p->next == thread_data)
                             ^
core/shared/platform/riot/riot_thread.c:107:28: note: Null pointer dereference
                p->next = p->next->next;
                           ^
core/shared/platform/riot/riot_thread.c:58:10: style: struct member 'os_thread_obj::to_be_freed' is never used. [unusedStructMember]
    bool to_be_freed;
         ^
core/shared/platform/rt-thread/rtt_platform.c:80:11: style: The scope of the variable 'mem_origin' can be reduced. [variableScope]
    void *mem_origin;
          ^
core/shared/platform/rt-thread/rtt_platform.c:81:17: style: The scope of the variable 'addr_field' can be reduced. [variableScope]
    rt_ubase_t *addr_field;
                ^
core/shared/platform/rt-thread/rtt_platform.c:34:28: portability: 'buf_origin' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    buf_fixed = buf_origin + sizeof(void *);
                           ^
core/shared/platform/rt-thread/rtt_platform.c:36:53: portability: 'buf_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        buf_fixed = (void *)((rt_ubase_t)(buf_fixed + 8) & (~7));
                                                    ^
core/shared/platform/rt-thread/rtt_platform.c:39:28: portability: 'buf_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    addr_field = buf_fixed - sizeof(rt_ubase_t);
                           ^
core/shared/platform/rt-thread/rtt_platform.c:58:22: portability: 'ptr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    addr_field = ptr - sizeof(rt_ubase_t);
                     ^
core/shared/platform/rt-thread/rtt_platform.c:63:33: portability: 'mem_new' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        mem_new_fixed = mem_new + sizeof(rt_ubase_t);
                                ^
core/shared/platform/rt-thread/rtt_platform.c:65:65: portability: 'mem_new_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            mem_new_fixed = (void *)((rt_ubase_t)(mem_new_fixed + 8) & (~7));
                                                                ^
core/shared/platform/rt-thread/rtt_platform.c:68:36: portability: 'mem_new_fixed' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        addr_field = mem_new_fixed - sizeof(rt_ubase_t);
                                   ^
core/shared/platform/rt-thread/rtt_platform.c:84:26: portability: 'ptr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        addr_field = ptr - sizeof(rt_ubase_t);
                         ^
core/shared/platform/rt-thread/rtt_platform.c:11:11: style: struct member 'os_malloc_list::real' is never used. [unusedStructMember]
    void *real;
          ^
core/shared/platform/rt-thread/rtt_platform.c:12:11: style: struct member 'os_malloc_list::used' is never used. [unusedStructMember]
    void *used;
          ^
core/shared/platform/vxworks/platform_init.c:28:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret += BH_VPRINTF(format, ap);
^
core/shared/platform/vxworks/platform_init.c:41:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return BH_VPRINTF(format, ap);
^
core/shared/platform/windows/platform_init.c:48:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret += BH_VPRINTF(format, ap);
^
core/shared/platform/windows/platform_init.c:61:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return BH_VPRINTF(format, ap);
^
core/shared/platform/zephyr/zephyr_platform.c:155:25: error: Division by zero. [zerodiv]
    os_printf("%d\n", 1 / i);
                        ^
core/shared/platform/zephyr/zephyr_platform.c:154:13: note: Assignment 'i=0', assigned value is 0
    int i = 0;
            ^
core/shared/platform/zephyr/zephyr_platform.c:155:25: note: Division by zero
    os_printf("%d\n", 1 / i);
                        ^
core/shared/platform/zephyr/zephyr_platform.c:133:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret += BH_VPRINTF(format, ap);
^
core/shared/platform/zephyr/zephyr_platform.c:146:0: information: Skipping configuration 'BH_VPRINTF' since the value of 'BH_VPRINTF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return BH_VPRINTF(format, ap);
^
core/shared/utils/bh_assert.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/bh_common.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/bh_common.c:29:17: style: The scope of the variable 'p_byte_read' can be reduced. [variableScope]
    const char *p_byte_read;
                ^
core/shared/utils/bh_common.c:140:12: style: The scope of the variable 'size' can be reduced. [variableScope]
    uint32 size;
           ^
core/shared/utils/bh_common.c:154:12: style: The scope of the variable 'size' can be reduced. [variableScope]
    uint32 size;
           ^
core/shared/utils/bh_hashmap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/bh_list.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/bh_log.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/bh_queue.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/bh_queue.c:50:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
core/shared/utils/bh_vector.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/runtime_timer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
core/shared/utils/uncommon/bh_read_file.c:30:0: information: Skipping configuration '_SH_DENYNO;__MINGW32__;_WIN32;_WIN32_' since the value of '_SH_DENYNO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (_sopen_s(&file, filename, _O_RDONLY | _O_BINARY, _SH_DENYNO, 0)) {
^
language-bindings/go/samples/wasm-app/main.c:21:5: warning: %lld in format string (no. 2) requires 'long long' but the argument type is 'signed long'. [invalidPrintfArgType_sint]
    printf("i32: %d, i64: %lld, f32: %f, f64: %f\n", i32, i64, f32, f64);
    ^
language-bindings/go/samples/wasm-app/main.c:27:5: warning: %lld in format string (no. 1) requires 'long long' but the argument type is 'signed long'. [invalidPrintfArgType_sint]
    printf("%lld + %lld = %lld\n", x, y, x + y);
    ^
language-bindings/go/samples/wasm-app/main.c:27:5: warning: %lld in format string (no. 2) requires 'long long' but the argument type is 'signed long'. [invalidPrintfArgType_sint]
    printf("%lld + %lld = %lld\n", x, y, x + y);
    ^
language-bindings/go/samples/wasm-app/main.c:27:5: warning: %lld in format string (no. 3) requires 'long long' but the argument type is 'signed long'. [invalidPrintfArgType_sint]
    printf("%lld + %lld = %lld\n", x, y, x + y);
    ^
product-mini/platforms/posix/main.c:142:26: style: The scope of the variable 'res1' can be reduced. [variableScope]
    char **res = NULL, **res1;
                         ^
product-mini/platforms/posix/main.c:342:11: style: The scope of the variable 'handle' can be reduced. [variableScope]
    void *handle;
          ^
product-mini/platforms/esp-idf/main/main.c:34:33: style: Variable 'wasm_file_buf_size' is assigned a value that is never used. [unreadVariable]
    unsigned wasm_file_buf_size = 0;
                                ^
product-mini/platforms/esp-idf/main/main.c:37:10: style: Unused variable: error_buf [unusedVariable]
    char error_buf[128];
         ^
product-mini/platforms/esp-idf/main/main.c:38:11: style: Unused variable: ret [unusedVariable]
    void *ret;
          ^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:105:9: warning:inconclusive: The buffer 'token_path' may not be null-terminated after the call to strncpy(). [terminateStrncpy]
        strncpy(token_path, home_dir, MAX_PATH);
        ^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:122:27: error: Read operation on a file that was opened only for writing. [readWriteOnlyFile]
        size_t read_num = fread(token, 1, sizeof(sgx_launch_token_t), fp);
                          ^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:260:9: error: Common realloc mistake: 'res' nulled but not freed upon failure [memleakOnRealloc]
        res = (char **)realloc(res, sizeof(char *) * (unsigned)(idx + 1));
        ^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:364:14: style: The scope of the variable 'ecall_args' can be reduced. [variableScope]
    uint64_t ecall_args[1];
             ^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:891:29: style: Variable 'p_eid' is assigned a value that is never used. [unreadVariable]
    sgx_enclave_id_t *p_eid = &g_eid;
                            ^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:905:23: style: Variable 'is_repl_mode' is assigned a value that is never used. [unreadVariable]
    bool is_repl_mode = false;
                      ^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave.cpp:438:28: style: Variable 'func_name_len' is assigned a value that is never used. [unreadVariable]
    int32 i, func_name_len = strlen(func_name);
                           ^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave.cpp:567:11: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
        p += sizeof(char *) * wasi_argc;
          ^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave_test.cpp:250:18: warning: Logical disjunction always evaluates to true: ret != 0 || ret != -1. [incorrectLogicOperator]
    if (ret != 0 || ret != -1) {
                 ^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave_test.cpp:255:18: warning: Logical disjunction always evaluates to true: ret != 0 || ret != -1. [incorrectLogicOperator]
    if (ret != 0 || ret != -1) {
                 ^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave_test.cpp:268:18: warning: Logical disjunction always evaluates to true: ret != 0 || ret != -1. [incorrectLogicOperator]
    if (ret != 0 || ret != -1) {
                 ^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave_test.cpp:276:18: warning: Logical disjunction always evaluates to true: ret != 0 || ret != -1. [incorrectLogicOperator]
    if (ret != 0 || ret != -1) {
                 ^
product-mini/platforms/windows/main.c:104:26: style: The scope of the variable 'res1' can be reduced. [variableScope]
    char **res = NULL, **res1;
                         ^
product-mini/platforms/windows/main.c:143:12: style: The scope of the variable 'n' can be reduced. [variableScope]
    size_t n;
           ^
product-mini/platforms/zephyr/simple/src/main.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
product-mini/platforms/zephyr/simple/src/wasm-app-riscv64/main.c:24:14: error: Buffer is accessed out of bounds: buf [bufferAccessOutOfBounds]
    snprintf(buf, 1024, "%s", "1234\n");
             ^
product-mini/platforms/zephyr/simple/src/wasm-app-riscv64/main.c:16:9: note: Assign buf, buffer with size 16
    buf = malloc(16);
        ^
product-mini/platforms/zephyr/simple/src/wasm-app-riscv64/main.c:17:9: note: Assuming condition is false
    if (!buf) {
        ^
product-mini/platforms/zephyr/simple/src/wasm-app-riscv64/main.c:24:14: note: Buffer overrun
    snprintf(buf, 1024, "%s", "1234\n");
             ^
samples/basic/src/main.c:194:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        printf("Native finished calling wasm function: calculate, return: %d\n",
        ^
samples/basic/src/native_impl.c:85:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("call func1 and return n1=%d\n", n1);
    ^
samples/basic/src/native_impl.c:93:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("call func2 and return n2=%d\n", n2);
    ^
samples/basic/src/native_impl.c:14:29: style: The scope of the variable 'temp' can be reduced. [variableScope]
    int i = 0, j = len - 1, temp;
                            ^
samples/basic/wasm-apps/testapp.c:61:58: warning: Found calculation inside sizeof(). [sizeofCalculation]
        intToStr((int)fpart, res + i + 1, sizeof(res + i + 1), afterpoint);
                                                         ^
samples/basic/wasm-apps/testapp.c:29:9: error: Uninitialized variable: ret [uninitvar]
        ret += 1.0f / seed1 + seed2;
        ^
samples/file/wasm-app/main.c:92:5: portability: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
    printf("Reading %ld characters at offset %d..\n", NAME_REPLACMENT_LEN,
    ^
samples/gui/wasm-apps/decrease/src/main.c:29:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        snprintf(count_str, sizeof(count_str), "%d", count / 100);
        ^
samples/gui/wasm-apps/decrease/src/main.c:43:5: portability: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_uint]
    printf("Label text %lu %s \n", strlen(text), text);
    ^
samples/gui/wasm-apps/increase/src/main.c:29:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        snprintf(count_str, sizeof(count_str), "%d", count / 100);
        ^
samples/gui/wasm-apps/increase/src/main.c:43:5: portability: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_uint]
    printf("Label text %lu %s \n", strlen(text), text);
    ^
samples/gui/wasm-runtime-wgl/src/platform/linux/iwasm_main.c:135:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
samples/gui/wasm-runtime-wgl/src/platform/linux/iwasm_main.c:325:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;
        ^
samples/gui/wasm-runtime-wgl/src/platform/zephyr/XPT2046.c:237:12: style: Variable 'tx1[0]' is reassigned a value before the old one has been used. [redundantAssignment]
    tx1[0] = CMD_Y_READ;
           ^
samples/gui/wasm-runtime-wgl/src/platform/zephyr/XPT2046.c:229:12: note: tx1[0] is assigned
    tx1[0] = CMD_X_READ;
           ^
samples/gui/wasm-runtime-wgl/src/platform/zephyr/XPT2046.c:237:12: note: tx1[0] is overwritten
    tx1[0] = CMD_Y_READ;
           ^
samples/gui/wasm-runtime-wgl/src/platform/zephyr/XPT2046.c:112:14: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    bool ret = false;
             ^
samples/gui/wasm-runtime-wgl/src/platform/zephyr/XPT2046.c:237:12: style: Variable 'tx1[0]' is assigned a value that is never used. [unreadVariable]
    tx1[0] = CMD_Y_READ;
           ^
samples/littlevgl/vgl-native-ui-app/lv-drivers/linux_display_indev.c:29:33: portability: 'buf' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    unsigned char *buf_xy = buf + 4 * x + 4 * y * buf_w;
                                ^
samples/littlevgl/vgl-native-ui-app/main.c:104:13: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
            snprintf(count_str, sizeof(count_str), "%d", count / 100);
            ^
samples/littlevgl/vgl-native-ui-app/main.c:169:29: style: Variable 'mouse_indev' is assigned a value that is never used. [unreadVariable]
    lv_indev_t *mouse_indev = lv_indev_drv_register(&indev_drv);
                            ^
samples/littlevgl/vgl-wasm-runtime/src/platform/linux/iwasm_main.c:133:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
samples/littlevgl/vgl-wasm-runtime/src/platform/linux/iwasm_main.c:482:12: style: Unused variable: n_native_symbols [unusedVariable]
    uint32 n_native_symbols;
           ^
samples/littlevgl/vgl-wasm-runtime/src/platform/linux/iwasm_main.c:319:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;
        ^
samples/littlevgl/vgl-wasm-runtime/src/platform/zephyr/XPT2046.c:238:12: style: Variable 'tx1[0]' is reassigned a value before the old one has been used. [redundantAssignment]
    tx1[0] = CMD_Y_READ;
           ^
samples/littlevgl/vgl-wasm-runtime/src/platform/zephyr/XPT2046.c:230:12: note: tx1[0] is assigned
    tx1[0] = CMD_X_READ;
           ^
samples/littlevgl/vgl-wasm-runtime/src/platform/zephyr/XPT2046.c:238:12: note: tx1[0] is overwritten
    tx1[0] = CMD_Y_READ;
           ^
samples/littlevgl/vgl-wasm-runtime/src/platform/zephyr/XPT2046.c:113:14: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    bool ret = false;
             ^
samples/littlevgl/vgl-wasm-runtime/src/platform/zephyr/XPT2046.c:238:12: style: Variable 'tx1[0]' is assigned a value that is never used. [unreadVariable]
    tx1[0] = CMD_Y_READ;
           ^
samples/littlevgl/wasm-apps/src/main.c:62:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        snprintf(count_str, sizeof(count_str), "%d", count / 100);
        ^
samples/littlevgl/wasm-apps/src/main.c:179:29: style: Variable 'mouse_indev' is assigned a value that is never used. [unreadVariable]
    lv_indev_t *mouse_indev = lv_indev_drv_register(&indev_drv);
                            ^
samples/multi-module/src/main.c:48:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    buffer = NULL;
    ^
samples/multi-module/wasm-apps/mC.c:49:5: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
    printf("%u\n", C5());
    ^
samples/multi-thread/wasm-apps/main_thread_exception.c:10:9: style: struct member 'ThreadArgs::start' is never used. [unusedStructMember]
    int start;
        ^
samples/multi-thread/wasm-apps/main_thread_exception.c:11:9: style: struct member 'ThreadArgs::length' is never used. [unusedStructMember]
    int length;
        ^
samples/simple/src/iwasm_main.c:135:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
samples/simple/src/iwasm_main.c:334:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;
        ^
samples/simple/wasm-apps/connection.c:63:15: style: Variable 'str' is assigned a value that is never used. [unreadVariable]
    char *str = "this is client!";
              ^
samples/simple/wasm-apps/sensor.c:30:23: style: Unused variable: config [unusedVariable]
    attr_container_t *config;
                      ^
samples/socket-api/wasm-src/socket_opts.c:222:0: information: Skipping configuration 'TCP_FASTOPEN_CONNECT' since the value of 'TCP_FASTOPEN_CONNECT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    OPTION_ASSERT(set_and_get_bool_opt(tcp_socket_fd, IPPROTO_TCP,
^
samples/socket-api/wasm-src/socket_opts.c:225:0: information: Skipping configuration 'TCP_FASTOPEN_CONNECT' since the value of 'TCP_FASTOPEN_CONNECT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    OPTION_ASSERT(set_and_get_bool_opt(tcp_socket_fd, IPPROTO_TCP,
^
samples/socket-api/wasm-src/socket_opts.c:195:0: information: Skipping configuration 'TCP_KEEPIDLE' since the value of 'TCP_KEEPIDLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    result = setsockopt(tcp_socket_fd, IPPROTO_TCP, TCP_KEEPIDLE, &time_s,
^
samples/socket-api/wasm-src/socket_opts.c:202:0: information: Skipping configuration 'TCP_KEEPIDLE' since the value of 'TCP_KEEPIDLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        getsockopt(tcp_socket_fd, IPPROTO_TCP, TCP_KEEPIDLE, &time_s, &opt_len);
^
samples/socket-api/wasm-src/socket_opts.c:240:0: information: Skipping configuration 'TCP_QUICKACK' since the value of 'TCP_QUICKACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    OPTION_ASSERT(
^
samples/socket-api/wasm-src/socket_opts.c:243:0: information: Skipping configuration 'TCP_QUICKACK' since the value of 'TCP_QUICKACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    OPTION_ASSERT(
^
samples/socket-api/wasm-src/tcp_server.c:30:5: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
    printf("[Server] Communicate with the new connection #%u @ %p ..\n",
    ^
samples/socket-api/wasm-src/tcp_server.c:40:5: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
    printf("[Server] Shuting down the new connection #%u ..\n", new_socket);
    ^
samples/wasi-threads/wasm-apps/wasi_thread_start.h:22:23: portability: 'start_args->stack' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    start_args->stack += STACK_SIZE;
                      ^
samples/wasi-threads/wasm-apps/wasi_thread_start.h:29:28: portability: 'start_args->stack' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    free(start_args->stack - STACK_SIZE);
                           ^
samples/wasm-c-api/src/clone.c:508:9: portability: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_uint]
        snprintf(thrd_arg->name, 32, "Worker#%lu", i);
        ^
samples/wasm-c-api/src/clone.c:514:13: style: Local variable 'ret' shadows outer variable [shadowVariable]
        int ret = pthread_create(&tids[i], NULL, thrd_func, thrd_arg);
            ^
samples/wasm-c-api/src/clone.c:488:9: note: Shadowed declaration
    int ret = EXIT_FAILURE;
        ^
samples/wasm-c-api/src/clone.c:514:13: note: Shadow variable
        int ret = pthread_create(&tids[i], NULL, thrd_func, thrd_arg);
            ^
samples/wasm-c-api/src/globalexportimport.c:87:5: error: Resource leak: file [resourceLeak]
    return NULL;
    ^
samples/wasm-c-api/src/serialize.c:41:9: error: Resource leak: file [resourceLeak]
        return 1;
        ^
samples/wasm-c-api/src/threads.c:148:9: error: Resource leak: file [resourceLeak]
        return 1;
        ^
samples/wasm-c-api/src/trap.c:162:19: style: Local variable 'i' shadows outer variable [shadowVariable]
      for (size_t i = 0; i < trace.size; ++i) {
                  ^
samples/wasm-c-api/src/trap.c:126:12: note: Shadowed declaration
  for (int i = 0; i < 2; ++i) {
           ^
samples/wasm-c-api/src/trap.c:162:19: note: Shadow variable
      for (size_t i = 0; i < trace.size; ++i) {
                  ^
samples/wasm-c-api/src/utils/multi_module_utils.c:46:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    buffer = NULL;
    ^
test-tools/component-test/host-clients/src/host_app_sample.c:201:9: error: Resource leak: fl [resourceLeak]
        return NULL;
        ^
test-tools/component-test/host-clients/src/host_app_sample.c:213:9: error: Resource leak: fl [resourceLeak]
        return NULL;
        ^
test-tools/component-test/host-clients/src/host_app_sample.c:213:9: error: Memory leak: buffer [memleak]
        return NULL;
        ^
test-tools/component-test/suites/01-life-cycle/test-app/06_timer.c:46:27: style: Local variable 'payload' shadows outer variable [shadowVariable]
        attr_container_t *payload;
                          ^
test-tools/component-test/suites/01-life-cycle/test-app/06_timer.c:43:23: note: Shadowed declaration
    attr_container_t *payload;
                      ^
test-tools/component-test/suites/01-life-cycle/test-app/06_timer.c:46:27: note: Shadow variable
        attr_container_t *payload;
                          ^
test-tools/component-test/suites/01-life-cycle/test-app/06_timer.c:43:23: style: Unused variable: payload [unusedVariable]
    attr_container_t *payload;
                      ^
test-tools/component-test/suites/01-life-cycle/test-app/07_sensor.c:48:23: style: Unused variable: config [unusedVariable]
    attr_container_t *config;
                      ^
test-tools/component-test/suites/01-life-cycle/test-app/08_on_destroy.c:47:23: style: Unused variable: config [unusedVariable]
    attr_container_t *config;
                      ^
test-tools/host-tool/external/cJSON/cJSON.c:441:13: style: Condition 'newbuffer' is always true [knownConditionTrueFalse]
        if (newbuffer) {
            ^
test-tools/host-tool/external/cJSON/cJSON.c:434:13: note: Assuming that condition '!newbuffer' is not redundant
        if (!newbuffer) {
            ^
test-tools/host-tool/external/cJSON/cJSON.c:441:13: note: Condition 'newbuffer' is always true
        if (newbuffer) {
            ^
test-tools/host-tool/external/cJSON/cJSON.c:484:17: style: Condition '(d*0)!=0' is always false [knownConditionTrueFalse]
    if ((d * 0) != 0) {
                ^
test-tools/host-tool/external/cJSON/cJSON.c:679:42: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
test-tools/host-tool/external/cJSON/cJSON.c:1518:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0)
            ^
test-tools/host-tool/external/cJSON/cJSON.c:1508:41: note: Calling function 'parse_string', 2nd argument 'input_buffer' value is 0
        if (!parse_string(current_item, input_buffer)) {
                                        ^
test-tools/host-tool/external/cJSON/cJSON.c:679:42: note: Null pointer dereference
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
test-tools/host-tool/external/cJSON/cJSON.c:680:38: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
                                     ^
test-tools/host-tool/external/cJSON/cJSON.c:1518:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0)
            ^
test-tools/host-tool/external/cJSON/cJSON.c:1508:41: note: Calling function 'parse_string', 2nd argument 'input_buffer' value is 0
        if (!parse_string(current_item, input_buffer)) {
                                        ^
test-tools/host-tool/external/cJSON/cJSON.c:680:38: note: Null pointer dereference
    const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
                                     ^
test-tools/host-tool/external/cJSON/cJSON.c:685:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (buffer_at_offset(input_buffer)[0] != '\"') {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1518:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0)
            ^
test-tools/host-tool/external/cJSON/cJSON.c:1508:41: note: Calling function 'parse_string', 2nd argument 'input_buffer' value is 0
        if (!parse_string(current_item, input_buffer)) {
                                        ^
test-tools/host-tool/external/cJSON/cJSON.c:685:9: note: Null pointer dereference
    if (buffer_at_offset(input_buffer)[0] != '\"') {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1313:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (input_buffer->depth >= CJSON_NESTING_LIMIT) {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1325:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1313:9: note: Null pointer dereference
    if (input_buffer->depth >= CJSON_NESTING_LIMIT) {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1316:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->depth++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1325:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1316:5: note: Null pointer dereference
    input_buffer->depth++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1318:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (buffer_at_offset(input_buffer)[0] != '[') {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1325:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1318:9: note: Null pointer dereference
    if (buffer_at_offset(input_buffer)[0] != '[') {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1323:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->offset++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1325:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1323:5: note: Null pointer dereference
    input_buffer->offset++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1333:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
        input_buffer->offset--;
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1325:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1333:9: note: Null pointer dereference
        input_buffer->offset--;
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1457:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (input_buffer->depth >= CJSON_NESTING_LIMIT) {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1462:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (cannot_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1457:9: note: Null pointer dereference
    if (input_buffer->depth >= CJSON_NESTING_LIMIT) {
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1460:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->depth++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1462:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (cannot_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1460:5: note: Null pointer dereference
    input_buffer->depth++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1468:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->offset++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1470:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1468:5: note: Null pointer dereference
    input_buffer->offset++;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1478:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
        input_buffer->offset--;
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1470:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0)
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1478:9: note: Null pointer dereference
        input_buffer->offset--;
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1483:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->offset--;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1518:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0)
            ^
test-tools/host-tool/external/cJSON/cJSON.c:1483:5: note: Null pointer dereference
    input_buffer->offset--;
    ^
test-tools/host-tool/external/cJSON/cJSON.c:1506:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
        input_buffer->offset++;
        ^
test-tools/host-tool/external/cJSON/cJSON.c:1518:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0)
            ^
test-tools/host-tool/external/cJSON/cJSON.c:1506:9: note: Null pointer dereference
        input_buffer->offset++;
        ^
test-tools/host-tool/external/cJSON/cJSON.c:449:22: warning: Either the condition 'newbuffer' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
    return newbuffer + p->offset;
                     ^
test-tools/host-tool/external/cJSON/cJSON.c:441:13: note: Assuming that condition 'newbuffer' is not redundant
        if (newbuffer) {
            ^
test-tools/host-tool/external/cJSON/cJSON.c:449:22: note: Null pointer addition
    return newbuffer + p->offset;
                     ^
test-tools/host-tool/external/cJSON/cJSON.c:222:40: style:inconclusive: Function 'cJSON_Delete' argument 1 names different: declaration 'c' definition 'item'. [funcArgNamesDifferent]
CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
                                       ^
test-tools/host-tool/external/cJSON/cJSON.h:188:40: note: Function 'cJSON_Delete' argument 1 names different: declaration 'c' definition 'item'.
CJSON_PUBLIC(void) cJSON_Delete(cJSON *c);
                                       ^
test-tools/host-tool/external/cJSON/cJSON.c:222:40: note: Function 'cJSON_Delete' argument 1 names different: declaration 'c' definition 'item'.
CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
                                       ^
test-tools/host-tool/external/cJSON/cJSON.c:1159:44: style:inconclusive: Function 'cJSON_PrintPreallocated' argument 2 names different: declaration 'buffer' definition 'buf'. [funcArgNamesDifferent]
cJSON_PrintPreallocated(cJSON *item, char *buf, const int len,
                                           ^
test-tools/host-tool/external/cJSON/cJSON.h:185:44: note: Function 'cJSON_PrintPreallocated' argument 2 names different: declaration 'buffer' definition 'buf'.
cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length,
                                           ^
test-tools/host-tool/external/cJSON/cJSON.c:1159:44: note: Function 'cJSON_PrintPreallocated' argument 2 names different: declaration 'buffer' definition 'buf'.
cJSON_PrintPreallocated(cJSON *item, char *buf, const int len,
                                           ^
test-tools/host-tool/external/cJSON/cJSON.c:1159:59: style:inconclusive: Function 'cJSON_PrintPreallocated' argument 3 names different: declaration 'length' definition 'len'. [funcArgNamesDifferent]
cJSON_PrintPreallocated(cJSON *item, char *buf, const int len,
                                                          ^
test-tools/host-tool/external/cJSON/cJSON.h:185:62: note: Function 'cJSON_PrintPreallocated' argument 3 names different: declaration 'length' definition 'len'.
cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length,
                                                             ^
test-tools/host-tool/external/cJSON/cJSON.c:1159:59: note: Function 'cJSON_PrintPreallocated' argument 3 names different: declaration 'length' definition 'len'.
cJSON_PrintPreallocated(cJSON *item, char *buf, const int len,
                                                          ^
test-tools/host-tool/external/cJSON/cJSON.c:1160:42: style:inconclusive: Function 'cJSON_PrintPreallocated' argument 4 names different: declaration 'format' definition 'fmt'. [funcArgNamesDifferent]
                        const cJSON_bool fmt)
                                         ^
test-tools/host-tool/external/cJSON/cJSON.h:186:42: note: Function 'cJSON_PrintPreallocated' argument 4 names different: declaration 'format' definition 'fmt'.
                        const cJSON_bool format);
                                         ^
test-tools/host-tool/external/cJSON/cJSON.c:1160:42: note: Function 'cJSON_PrintPreallocated' argument 4 names different: declaration 'format' definition 'fmt'.
                        const cJSON_bool fmt)
                                         ^
test-tools/host-tool/external/cJSON/cJSON.c:2230:51: style:inconclusive: Function 'cJSON_CreateBool' argument 1 names different: declaration 'boolean' definition 'b'. [funcArgNamesDifferent]
CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool b)
                                                  ^
test-tools/host-tool/external/cJSON/cJSON.h:227:51: note: Function 'cJSON_CreateBool' argument 1 names different: declaration 'boolean' definition 'b'.
CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool boolean);
                                                  ^
test-tools/host-tool/external/cJSON/cJSON.c:2230:51: note: Function 'cJSON_CreateBool' argument 1 names different: declaration 'boolean' definition 'b'.
CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool b)
                                                  ^
test-tools/host-tool/external/cJSON/cJSON.c:1400:19: style: Variable 'length' is assigned a value that is never used. [unreadVariable]
    size_t length = 0;
                  ^
test-tools/host-tool/src/host_tool_utils.c:63:35: style:inconclusive: Function 'attr2json' argument 1 names different: declaration 'attr' definition 'attr_cont'. [funcArgNamesDifferent]
attr2json(const attr_container_t *attr_cont)
                                  ^
test-tools/host-tool/src/host_tool_utils.h:26:35: note: Function 'attr2json' argument 1 names different: declaration 'attr' definition 'attr_cont'.
attr2json(const attr_container_t *attr);
                                  ^
test-tools/host-tool/src/host_tool_utils.c:63:35: note: Function 'attr2json' argument 1 names different: declaration 'attr' definition 'attr_cont'.
attr2json(const attr_container_t *attr_cont)
                                  ^
test-tools/host-tool/src/host_tool_utils.c:205:24: style:inconclusive: Function 'json2attr' argument 1 names different: declaration 'json' definition 'json_obj'. [funcArgNamesDifferent]
json2attr(const cJSON *json_obj)
                       ^
test-tools/host-tool/src/host_tool_utils.h:38:24: note: Function 'json2attr' argument 1 names different: declaration 'json' definition 'json_obj'.
json2attr(const cJSON *json);
                       ^
test-tools/host-tool/src/host_tool_utils.c:205:24: note: Function 'json2attr' argument 1 names different: declaration 'json' definition 'json_obj'.
json2attr(const cJSON *json_obj)
                       ^
test-tools/host-tool/src/main.c:454:9: style: The scope of the variable 'c' can be reduced. [variableScope]
    int c;
        ^
test-tools/host-tool/src/main.c:836:17: style: The scope of the variable 'n' can be reduced. [variableScope]
            int n;
                ^
test-tools/host-tool/src/main.c:151:15: style: Local variable 'request' shadows outer function [shadowFunction]
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:227:1: note: Shadowed declaration
request(req_info *info)
^
test-tools/host-tool/src/main.c:151:15: note: Shadow variable
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:194:15: style: Local variable 'request' shadows outer function [shadowFunction]
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:227:1: note: Shadowed declaration
request(req_info *info)
^
test-tools/host-tool/src/main.c:194:15: note: Shadow variable
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:212:15: style: Local variable 'request' shadows outer function [shadowFunction]
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:227:1: note: Shadowed declaration
request(req_info *info)
^
test-tools/host-tool/src/main.c:212:15: note: Shadow variable
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:279:15: style: Local variable 'request' shadows outer function [shadowFunction]
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:227:1: note: Shadowed declaration
request(req_info *info)
^
test-tools/host-tool/src/main.c:279:15: note: Shadow variable
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:312:15: style: Local variable 'request' shadows outer function [shadowFunction]
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:227:1: note: Shadowed declaration
request(req_info *info)
^
test-tools/host-tool/src/main.c:312:15: note: Shadow variable
    request_t request[1] = { 0 };
              ^
test-tools/host-tool/src/main.c:647:16: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
    int result = -1;
               ^
test-tools/host-tool/src/transport.c:221:10: warning: The address of local variable 'message_type' might be accessed at non-zero index. [objectIndex]
        p[ctx->size_in_phase++] = ch;
         ^
test-tools/host-tool/src/transport.c:220:45: note: Address of variable taken here.
        unsigned char *p = (unsigned char *)&ctx->message.message_type;
                                            ^
test-tools/host-tool/src/transport.c:221:10: note: The address of local variable 'message_type' might be accessed at non-zero index.
        p[ctx->size_in_phase++] = ch;
         ^
test-tools/host-tool/src/transport.c:230:10: warning: The address of local variable 'payload_size' might be accessed at non-zero index. [objectIndex]
        p[ctx->size_in_phase++] = ch;
         ^
test-tools/host-tool/src/transport.c:229:45: note: Address of variable taken here.
        unsigned char *p = (unsigned char *)&ctx->message.payload_size;
                                            ^
test-tools/host-tool/src/transport.c:230:10: note: The address of local variable 'payload_size' might be accessed at non-zero index.
        p[ctx->size_in_phase++] = ch;
         ^
test-tools/host-tool/src/transport.c:153:40: style: Checking if unsigned expression 'len' is less than zero. [unsignedLessThanZero]
    if (fd == -1 || buf == NULL || len <= 0) {
                                       ^
tests/benchmarks/dhrystone/src/dhry_1.c:99:25: style: Variable 'general' is assigned a value that is never used. [unreadVariable]
    char general[9][80] = { " " };
                        ^
tests/benchmarks/dhrystone/src/dhry_1.c:98:9: style: Unused variable: endit [unusedVariable]
    int endit, count = 10;
        ^
wamr-compiler/main.c:109:26: style: The scope of the variable 'res1' can be reduced. [variableScope]
    char **res = NULL, **res1;
                         ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:66:20: warning: Null pointer dereference: sock_addr [ctunullpointer]
    if (AF_INET == sock_addr->sa_family) {
                   ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:185:14: note: Assuming that condition 'NULL==addr' is not redundant

             ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:189:34: note: Calling function sockaddr_to_wasi_addr, 1st argument is null
    error = sockaddr_to_wasi_addr(addr, addrlen, &wasi_addr);
                                 ^
core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c:66:20: note: Dereferencing argument sock_addr that is null
    if (AF_INET == sock_addr->sa_family) {
                   ^
test-tools/host-tool/external/cJSON/cJSON.c:679:42: warning: Null pointer dereference: input_buffer [ctunullpointer]
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
test-tools/host-tool/external/cJSON/cJSON.c:1518:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant

            ^
test-tools/host-tool/external/cJSON/cJSON.c:1508:26: note: Calling function parse_string, 2nd argument is null
        if (!parse_string(current_item, input_buffer)) {
                         ^
test-tools/host-tool/external/cJSON/cJSON.c:679:42: note: Dereferencing argument input_buffer that is null
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
samples/multi-module/wasm-apps/mA.c:8:0: style: The function 'A2' is never used. [unusedFunction]

^
samples/multi-module/wasm-apps/mB.c:18:0: style: The function 'B3' is never used. [unusedFunction]

^
samples/multi-module/wasm-apps/mC.c:35:0: style: The function 'C4' is never used. [unusedFunction]

^
product-mini/platforms/android/wasm-jni.cpp:62:0: style: The function 'Java_com_intel_wasm_api_Runtime_run' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_llvm_extra2.cpp:142:0: style: The function 'LLVMGetTailCallKind' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-wasi-threads/test/create_threads_until_limit.c:35:0: style: The function '__wasi_thread_start_C' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_ir.c:53:0: style: The function '_jit_insn_new_Reg_0' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_ir.c:123:0: style: The function '_jit_insn_new_Reg_5' is never used. [unusedFunction]

^
core/shared/platform/android/platform_init.c:93:0: style: The function 'accept4' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3866:0: style: The function 'addr_pool_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3711:0: style: The function 'addr_pool_init' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3719:0: style: The function 'addr_pool_insert' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:2182:0: style: The function 'aot_check_app_addr_and_convert' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_emit_function.c:1587:0: style: The function 'aot_compile_op_ref_func' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_emit_function.c:1562:0: style: The function 'aot_compile_op_ref_is_null' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_emit_function.c:1552:0: style: The function 'aot_compile_op_ref_null' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:315:0: style: The function 'aot_compile_simd_extract_f32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:323:0: style: The function 'aot_compile_simd_extract_f64x2' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:289:0: style: The function 'aot_compile_simd_extract_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:299:0: style: The function 'aot_compile_simd_extract_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:307:0: style: The function 'aot_compile_simd_extract_i64x2' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:279:0: style: The function 'aot_compile_simd_extract_i8x16' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:119:0: style: The function 'aot_compile_simd_f32x4_abs' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:52:0: style: The function 'aot_compile_simd_f32x4_arith' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:161:0: style: The function 'aot_compile_simd_f32x4_ceil' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_comparisons.c:216:0: style: The function 'aot_compile_simd_f32x4_compare' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:446:0: style: The function 'aot_compile_simd_f32x4_convert_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:175:0: style: The function 'aot_compile_simd_f32x4_floor' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:249:0: style: The function 'aot_compile_simd_f32x4_min_max' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:203:0: style: The function 'aot_compile_simd_f32x4_nearest' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:85:0: style: The function 'aot_compile_simd_f32x4_neg' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:291:0: style: The function 'aot_compile_simd_f32x4_pmin_pmax' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:350:0: style: The function 'aot_compile_simd_f32x4_promote' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:133:0: style: The function 'aot_compile_simd_f32x4_round' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:147:0: style: The function 'aot_compile_simd_f32x4_sqrt' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:189:0: style: The function 'aot_compile_simd_f32x4_trunc' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:126:0: style: The function 'aot_compile_simd_f64x2_abs' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:59:0: style: The function 'aot_compile_simd_f64x2_arith' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:168:0: style: The function 'aot_compile_simd_f64x2_ceil' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_comparisons.c:224:0: style: The function 'aot_compile_simd_f64x2_compare' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:465:0: style: The function 'aot_compile_simd_f64x2_convert_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:309:0: style: The function 'aot_compile_simd_f64x2_demote' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:182:0: style: The function 'aot_compile_simd_f64x2_floor' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:257:0: style: The function 'aot_compile_simd_f64x2_min_max' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:211:0: style: The function 'aot_compile_simd_f64x2_nearest' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:91:0: style: The function 'aot_compile_simd_f64x2_neg' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:300:0: style: The function 'aot_compile_simd_f64x2_pmin_pmax' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:140:0: style: The function 'aot_compile_simd_f64x2_round' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:154:0: style: The function 'aot_compile_simd_f64x2_sqrt' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_floating_point.c:196:0: style: The function 'aot_compile_simd_f64x2_trunc' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:226:0: style: The function 'aot_compile_simd_i16x8_abs' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bool_reductions.c:85:0: style: The function 'aot_compile_simd_i16x8_all_true' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:55:0: style: The function 'aot_compile_simd_i16x8_arith' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:322:0: style: The function 'aot_compile_simd_i16x8_avgr_u' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bitmask_extracts.c:115:0: style: The function 'aot_compile_simd_i16x8_bitmask' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:181:0: style: The function 'aot_compile_simd_i16x8_cmp' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_comparisons.c:145:0: style: The function 'aot_compile_simd_i16x8_compare' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:583:0: style: The function 'aot_compile_simd_i16x8_extadd_pairwise_i8x16' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:319:0: style: The function 'aot_compile_simd_i16x8_extend_i8x16' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:719:0: style: The function 'aot_compile_simd_i16x8_extmul_i8x16' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:210:0: style: The function 'aot_compile_simd_i16x8_narrow_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:100:0: style: The function 'aot_compile_simd_i16x8_neg' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:601:0: style: The function 'aot_compile_simd_i16x8_q15mulr_sat' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_sat_int_arith.c:54:0: style: The function 'aot_compile_simd_i16x8_saturate' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bit_shifts.c:126:0: style: The function 'aot_compile_simd_i16x8_shift' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:232:0: style: The function 'aot_compile_simd_i32x4_abs' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bool_reductions.c:92:0: style: The function 'aot_compile_simd_i32x4_all_true' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:62:0: style: The function 'aot_compile_simd_i32x4_arith' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:329:0: style: The function 'aot_compile_simd_i32x4_avgr_u' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bitmask_extracts.c:122:0: style: The function 'aot_compile_simd_i32x4_bitmask' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:189:0: style: The function 'aot_compile_simd_i32x4_cmp' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_comparisons.c:152:0: style: The function 'aot_compile_simd_i32x4_compare' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:336:0: style: The function 'aot_compile_simd_i32x4_dot_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:592:0: style: The function 'aot_compile_simd_i32x4_extadd_pairwise_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:328:0: style: The function 'aot_compile_simd_i32x4_extend_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:728:0: style: The function 'aot_compile_simd_i32x4_extmul_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:226:0: style: The function 'aot_compile_simd_i32x4_narrow_i64x2' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:106:0: style: The function 'aot_compile_simd_i32x4_neg' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_sat_int_arith.c:69:0: style: The function 'aot_compile_simd_i32x4_saturate' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bit_shifts.c:133:0: style: The function 'aot_compile_simd_i32x4_shift' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:368:0: style: The function 'aot_compile_simd_i32x4_trunc_sat_f32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:383:0: style: The function 'aot_compile_simd_i32x4_trunc_sat_f64x2' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:238:0: style: The function 'aot_compile_simd_i64x2_abs' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bool_reductions.c:99:0: style: The function 'aot_compile_simd_i64x2_all_true' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:69:0: style: The function 'aot_compile_simd_i64x2_arith' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bitmask_extracts.c:129:0: style: The function 'aot_compile_simd_i64x2_bitmask' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_comparisons.c:159:0: style: The function 'aot_compile_simd_i64x2_compare' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:337:0: style: The function 'aot_compile_simd_i64x2_extend_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:737:0: style: The function 'aot_compile_simd_i64x2_extmul_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:112:0: style: The function 'aot_compile_simd_i64x2_neg' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bit_shifts.c:140:0: style: The function 'aot_compile_simd_i64x2_shift' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:220:0: style: The function 'aot_compile_simd_i8x16_abs' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bool_reductions.c:78:0: style: The function 'aot_compile_simd_i8x16_all_true' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:48:0: style: The function 'aot_compile_simd_i8x16_arith' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:315:0: style: The function 'aot_compile_simd_i8x16_avgr_u' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bitmask_extracts.c:108:0: style: The function 'aot_compile_simd_i8x16_bitmask' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:173:0: style: The function 'aot_compile_simd_i8x16_cmp' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_comparisons.c:138:0: style: The function 'aot_compile_simd_i8x16_compare' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_conversions.c:194:0: style: The function 'aot_compile_simd_i8x16_narrow_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:94:0: style: The function 'aot_compile_simd_i8x16_neg' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_int_arith.c:118:0: style: The function 'aot_compile_simd_i8x16_popcnt' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_sat_int_arith.c:39:0: style: The function 'aot_compile_simd_i8x16_saturate' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bit_shifts.c:119:0: style: The function 'aot_compile_simd_i8x16_shift' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:64:0: style: The function 'aot_compile_simd_load_extend' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:175:0: style: The function 'aot_compile_simd_load_lane' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:119:0: style: The function 'aot_compile_simd_load_splat' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:220:0: style: The function 'aot_compile_simd_load_zero' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:405:0: style: The function 'aot_compile_simd_replace_f32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:413:0: style: The function 'aot_compile_simd_replace_f64x2' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:381:0: style: The function 'aot_compile_simd_replace_i16x8' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:389:0: style: The function 'aot_compile_simd_replace_i32x4' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:397:0: style: The function 'aot_compile_simd_replace_i64x2' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:373:0: style: The function 'aot_compile_simd_replace_i8x16' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:12:0: style: The function 'aot_compile_simd_shuffle' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_construct_values.c:53:0: style: The function 'aot_compile_simd_splat' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:326:0: style: The function 'aot_compile_simd_store_lane' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_access_lanes.c:216:0: style: The function 'aot_compile_simd_swizzle' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bool_reductions.c:106:0: style: The function 'aot_compile_simd_v128_any_true' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_bitwise_ops.c:127:0: style: The function 'aot_compile_simd_v128_bitwise' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_construct_values.c:13:0: style: The function 'aot_compile_simd_v128_const' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:44:0: style: The function 'aot_compile_simd_v128_load' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_load_store.c:310:0: style: The function 'aot_compile_simd_v128_store' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_llvm.c:2186:0: style: The function 'aot_compiler_destroy' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_llvm.c:2164:0: style: The function 'aot_compiler_init' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:1940:0: style: The function 'aot_enlarge_memory' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:1611:0: style: The function 'aot_get_exception' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:1103:0: style: The function 'aot_instantiate' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:149:0: style: The function 'aot_intrinsic_ceil_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:155:0: style: The function 'aot_intrinsic_ceil_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:265:0: style: The function 'aot_intrinsic_clz_i32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:278:0: style: The function 'aot_intrinsic_clz_i64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:209:0: style: The function 'aot_intrinsic_copysign_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:215:0: style: The function 'aot_intrinsic_copysign_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:291:0: style: The function 'aot_intrinsic_ctz_i32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:304:0: style: The function 'aot_intrinsic_ctz_i64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:447:0: style: The function 'aot_intrinsic_f32_cmp' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:435:0: style: The function 'aot_intrinsic_f32_to_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:387:0: style: The function 'aot_intrinsic_f32_to_i32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:399:0: style: The function 'aot_intrinsic_f32_to_i64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:393:0: style: The function 'aot_intrinsic_f32_to_u32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:405:0: style: The function 'aot_intrinsic_f32_to_u64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:478:0: style: The function 'aot_intrinsic_f64_cmp' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:441:0: style: The function 'aot_intrinsic_f64_to_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:411:0: style: The function 'aot_intrinsic_f64_to_i32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:423:0: style: The function 'aot_intrinsic_f64_to_i64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:417:0: style: The function 'aot_intrinsic_f64_to_u32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:429:0: style: The function 'aot_intrinsic_f64_to_u64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:137:0: style: The function 'aot_intrinsic_fabs_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:143:0: style: The function 'aot_intrinsic_fabs_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:89:0: style: The function 'aot_intrinsic_fadd_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:95:0: style: The function 'aot_intrinsic_fadd_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:125:0: style: The function 'aot_intrinsic_fdiv_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:131:0: style: The function 'aot_intrinsic_fdiv_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:161:0: style: The function 'aot_intrinsic_floor_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:167:0: style: The function 'aot_intrinsic_floor_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:243:0: style: The function 'aot_intrinsic_fmax_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:254:0: style: The function 'aot_intrinsic_fmax_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:221:0: style: The function 'aot_intrinsic_fmin_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:232:0: style: The function 'aot_intrinsic_fmin_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:113:0: style: The function 'aot_intrinsic_fmul_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:119:0: style: The function 'aot_intrinsic_fmul_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:101:0: style: The function 'aot_intrinsic_fsub_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:107:0: style: The function 'aot_intrinsic_fsub_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:515:0: style: The function 'aot_intrinsic_i32_div_s' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:521:0: style: The function 'aot_intrinsic_i32_div_u' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:527:0: style: The function 'aot_intrinsic_i32_rem_s' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:533:0: style: The function 'aot_intrinsic_i32_rem_u' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:339:0: style: The function 'aot_intrinsic_i32_to_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:351:0: style: The function 'aot_intrinsic_i32_to_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:563:0: style: The function 'aot_intrinsic_i64_bit_and' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:557:0: style: The function 'aot_intrinsic_i64_bit_or' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:509:0: style: The function 'aot_intrinsic_i64_div_s' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:539:0: style: The function 'aot_intrinsic_i64_div_u' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:545:0: style: The function 'aot_intrinsic_i64_rem_s' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:551:0: style: The function 'aot_intrinsic_i64_rem_u' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:363:0: style: The function 'aot_intrinsic_i64_to_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:375:0: style: The function 'aot_intrinsic_i64_to_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:317:0: style: The function 'aot_intrinsic_popcnt_i32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:328:0: style: The function 'aot_intrinsic_popcnt_i64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:185:0: style: The function 'aot_intrinsic_rint_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:191:0: style: The function 'aot_intrinsic_rint_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:197:0: style: The function 'aot_intrinsic_sqrt_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:203:0: style: The function 'aot_intrinsic_sqrt_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:173:0: style: The function 'aot_intrinsic_trunc_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:179:0: style: The function 'aot_intrinsic_trunc_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:345:0: style: The function 'aot_intrinsic_u32_to_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:357:0: style: The function 'aot_intrinsic_u32_to_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:369:0: style: The function 'aot_intrinsic_u64_to_f32' is never used. [unusedFunction]

^
core/iwasm/aot/aot_intrinsic.c:381:0: style: The function 'aot_intrinsic_u64_to_f64' is never used. [unusedFunction]

^
core/iwasm/aot/aot_loader.c:3171:0: style: The function 'aot_load_from_aot_file' is never used. [unusedFunction]

^
core/iwasm/aot/aot_loader.c:2930:0: style: The function 'aot_load_from_sections' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:2200:0: style: The function 'aot_memmove' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:2206:0: style: The function 'aot_memset' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:1924:0: style: The function 'aot_module_dup_data' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:1918:0: style: The function 'aot_module_free' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:1910:0: style: The function 'aot_module_realloc' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_llvm.c:3490:0: style: The function 'aot_set_cond_br_weights' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:2212:0: style: The function 'aot_sqrt' is never used. [unusedFunction]

^
core/iwasm/aot/aot_runtime.c:2218:0: style: The function 'aot_sqrtf' is never used. [unusedFunction]

^
core/app-framework/connection/app/connection.c:90:0: style: The function 'api_config_connection' is never used. [unusedFunction]

^
product-mini/platforms/esp-idf/main/main.c:141:0: style: The function 'app_main' is never used. [unusedFunction]

^
core/app-mgr/app-manager/module_utils.c:156:0: style: The function 'app_manager_get_module_heap' is never used. [unusedFunction]

^
core/app-mgr/app-manager/module_utils.c:142:0: style: The function 'app_manager_get_module_name' is never used. [unusedFunction]

^
core/app-mgr/app-manager/module_utils.c:135:0: style: The function 'app_manager_get_module_queue' is never used. [unusedFunction]

^
core/app-mgr/app-manager/module_utils.c:183:0: style: The function 'app_manager_is_interrupting_module' is never used. [unusedFunction]

^
core/app-mgr/app-manager/app_manager.c:406:0: style: The function 'app_manager_is_started' is never used. [unusedFunction]

^
core/app-mgr/app-manager/platform/linux/app_mgr_linux.c:42:0: style: The function 'app_manager_signature_verify' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3679:0: style: The function 'argv_environ_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3660:0: style: The function 'argv_environ_init' is never used. [unusedFunction]

^
core/shared/platform/common/math/math.c:1548:0: style: The function 'atan' is never used. [unusedFunction]

^
core/shared/platform/common/math/math.c:1554:0: style: The function 'atan2' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:746:0: style: The function 'attr_container_get_as_bool' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:740:0: style: The function 'attr_container_get_as_double' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:734:0: style: The function 'attr_container_get_as_float' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:674:0: style: The function 'attr_container_get_as_int16' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:686:0: style: The function 'attr_container_get_as_int32' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:716:0: style: The function 'attr_container_get_as_int8' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:692:0: style: The function 'attr_container_get_as_uint32' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:704:0: style: The function 'attr_container_get_as_uint64' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:722:0: style: The function 'attr_container_get_as_uint8' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:236:0: style: The function 'attr_container_get_attr_num' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:863:0: style: The function 'attr_container_is_constant' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:840:0: style: The function 'attr_container_serialize' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:520:0: style: The function 'attr_container_set_byte' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:550:0: style: The function 'attr_container_set_float' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:473:0: style: The function 'attr_container_set_int16' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:488:0: style: The function 'attr_container_set_int32' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:527:0: style: The function 'attr_container_set_int8' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:465:0: style: The function 'attr_container_set_short' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:496:0: style: The function 'attr_container_set_uint32' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:512:0: style: The function 'attr_container_set_uint64' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:534:0: style: The function 'attr_container_set_uint8' is never used. [unusedFunction]

^
core/shared/utils/bh_common.c:20:0: style: The function 'b_memcpy_wa' is never used. [unusedFunction]

^
core/shared/utils/bh_common.c:96:0: style: The function 'b_memmove_s' is never used. [unusedFunction]

^
core/shared/utils/bh_common.c:116:0: style: The function 'b_strcat_s' is never used. [unusedFunction]

^
core/shared/utils/bh_common.c:127:0: style: The function 'b_strcpy_s' is never used. [unusedFunction]

^
core/shared/utils/bh_assert.c:9:0: style: The function 'bh_assert_internal' is never used. [unusedFunction]

^
core/shared/utils/bh_hashmap.c:302:0: style: The function 'bh_hash_map_get_elem_struct_size' is never used. [unusedFunction]

^
core/shared/utils/bh_hashmap.c:289:0: style: The function 'bh_hash_map_get_struct_size' is never used. [unusedFunction]

^
core/shared/utils/bh_hashmap.c:308:0: style: The function 'bh_hash_map_traverse' is never used. [unusedFunction]

^
core/shared/utils/bh_hashmap.c:163:0: style: The function 'bh_hash_map_update' is never used. [unusedFunction]

^
core/shared/utils/bh_log.c:102:0: style: The function 'bh_log_proc_mem' is never used. [unusedFunction]

^
core/shared/utils/bh_queue.c:36:0: style: The function 'bh_message_payload_len' is never used. [unusedFunction]

^
core/shared/platform/alios/alios_platform.c:22:0: style: The function 'bh_platform_destroy' is never used. [unusedFunction]

^
core/shared/platform/alios/alios_platform.c:16:0: style: The function 'bh_platform_init' is never used. [unusedFunction]

^
core/shared/utils/bh_queue.c:224:0: style: The function 'bh_queue_get_message_count' is never used. [unusedFunction]

^
core/shared/utils/bh_vector.c:144:0: style: The function 'bh_vector_insert' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2013:0: style: The function 'cJSON_AddArrayToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1949:0: style: The function 'cJSON_AddBoolToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1937:0: style: The function 'cJSON_AddFalseToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1891:0: style: The function 'cJSON_AddItemReferenceToArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1901:0: style: The function 'cJSON_AddItemReferenceToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1885:0: style: The function 'cJSON_AddItemToObjectCS' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1913:0: style: The function 'cJSON_AddNullToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1962:0: style: The function 'cJSON_AddNumberToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2001:0: style: The function 'cJSON_AddObjectToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1988:0: style: The function 'cJSON_AddRawToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1975:0: style: The function 'cJSON_AddStringToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1925:0: style: The function 'cJSON_AddTrueToObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2300:0: style: The function 'cJSON_CreateArrayReference' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2409:0: style: The function 'cJSON_CreateDoubleArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2378:0: style: The function 'cJSON_CreateFloatArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2348:0: style: The function 'cJSON_CreateIntArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2289:0: style: The function 'cJSON_CreateObjectReference' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2440:0: style: The function 'cJSON_CreateStringArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2278:0: style: The function 'cJSON_CreateStringReference' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2061:0: style: The function 'cJSON_DeleteItemFromArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2082:0: style: The function 'cJSON_DeleteItemFromObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2088:0: style: The function 'cJSON_DeleteItemFromObjectCaseSensitive' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1699:0: style: The function 'cJSON_GetArrayItem' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:70:0: style: The function 'cJSON_GetErrorPtr' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:75:0: style: The function 'cJSON_GetStringValue' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1756:0: style: The function 'cJSON_HasObjectItem' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:181:0: style: The function 'cJSON_InitHooks' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2095:0: style: The function 'cJSON_InsertItemInArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2629:0: style: The function 'cJSON_IsBool' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2637:0: style: The function 'cJSON_IsNull' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2682:0: style: The function 'cJSON_IsRaw' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2546:0: style: The function 'cJSON_Minify' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1131:0: style: The function 'cJSON_PrintBuffered' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1159:0: style: The function 'cJSON_PrintPreallocated' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:1125:0: style: The function 'cJSON_PrintUnformatted' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2153:0: style: The function 'cJSON_ReplaceItemInArray' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2187:0: style: The function 'cJSON_ReplaceItemInObject' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2193:0: style: The function 'cJSON_ReplaceItemInObjectCaseSensitive' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:351:0: style: The function 'cJSON_SetNumberHelper' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:91:0: style: The function 'cJSON_Version' is never used. [unusedFunction]

^
test-tools/host-tool/external/cJSON/cJSON.c:2809:0: style: The function 'cJSON_malloc' is never used. [unusedFunction]

^
samples/basic/wasm-apps/testapp.c:84:0: style: The function 'calculate' is never used. [unusedFunction]

^
samples/wasm-c-api/src/memory.c:61:0: style: The function 'check_call2' is never used. [unusedFunction]

^
core/app-mgr/app-manager/module_utils.c:213:0: style: The function 'check_modules_timer_expiry' is never used. [unusedFunction]

^
core/iwasm/aot/arch/aot_reloc_aarch64.c:125:0: style: The function 'check_reloc_offset' is never used. [unusedFunction]

^
core/iwasm/compilation/debug/dwarf_extractor.cpp:45:0: style: The function 'create_dwarf_extractor' is never used. [unusedFunction]

^
core/iwasm/compilation/debug/dwarf_extractor.cpp:104:0: style: The function 'destroy_dwarf_extractor' is never used. [unusedFunction]

^
samples/littlevgl/vgl-native-ui-app/lv-drivers/linux_display_indev.c:196:0: style: The function 'display_deinit' is never used. [unusedFunction]

^
samples/littlevgl/vgl-native-ui-app/main.c:131:0: style: The function 'display_vdb_write_wrapper' is never used. [unusedFunction]

^
core/shared/platform/android/platform_init.c:101:0: style: The function 'dup3' is never used. [unusedFunction]

^
core/iwasm/compilation/debug/dwarf_extractor.cpp:422:0: style: The function 'dwarf_get_func_name' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave.cpp:699:0: style: The function 'ecall_iwasm_main' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/Enclave/Enclave_test.cpp:12:0: style: The function 'ecall_iwasm_test' is never used. [unusedFunction]

^
core/shared/platform/android/platform_init.c:115:0: style: The function 'epoll_create1' is never used. [unusedFunction]

^
core/shared/platform/android/platform_init.c:122:0: style: The function 'epoll_pwait' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3697:0: style: The function 'fd_prestats_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:336:0: style: The function 'fd_prestats_init' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:386:0: style: The function 'fd_prestats_insert' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3683:0: style: The function 'fd_table_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:442:0: style: The function 'fd_table_init' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:681:0: style: The function 'fd_table_insert_existing' is never used. [unusedFunction]

^
samples/basic/wasm-apps/testapp.c:38:0: style: The function 'float_to_string' is never used. [unusedFunction]

^
samples/basic/wasm-apps/testapp.c:22:0: style: The function 'generate_float' is never used. [unusedFunction]

^
core/app-framework/base/native/base_lib_export.c:20:0: style: The function 'get_base_lib_export_apis' is never used. [unusedFunction]

^
core/app-framework/app_ext_lib_export.c:34:0: style: The function 'get_ext_lib_export_apis' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:55:0: style: The function 'get_int64' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:1327:0: style: The function 'get_lib_pthread_export_apis' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-rats/lib_rats_wrapper.c:111:0: style: The function 'get_lib_rats_export_apis' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-wasi-threads/lib_wasi_threads_wrapper.c:159:0: style: The function 'get_lib_wasi_threads_export_apis' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-builtin/libc_builtin_wrapper.c:1056:0: style: The function 'get_libc_builtin_export_apis' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-emcc/libc_emcc_wrapper.c:550:0: style: The function 'get_libc_emcc_export_apis' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-uvwasi/libc_uvwasi_wrapper.c:1146:0: style: The function 'get_libc_wasi_export_apis' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_frontend.c:261:0: style: The function 'get_memory_data_end_reg' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_frontend.c:135:0: style: The function 'get_module_reg' is never used. [unusedFunction]

^
core/iwasm/aot/debug/elf_parser.c:104:0: style: The function 'get_text_section' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:63:0: style: The function 'get_uint64' is never used. [unusedFunction]

^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:303:0: style: The function 'handleError' is never used. [unusedFunction]

^
core/shared/platform/android/platform_init.c:130:0: style: The function 'inotify_init1' is never used. [unusedFunction]

^
core/iwasm/common/arch/invokeNative_general.c:10:0: style: The function 'invokeNative' is never used. [unusedFunction]

^
core/iwasm/aot/debug/elf_parser.c:22:0: style: The function 'is_ELF' is never used. [unusedFunction]

^
core/iwasm/aot/debug/elf_parser.c:52:0: style: The function 'is_ELF64' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_utils.c:9:0: style: The function 'jit_bitmap_new' is never used. [unusedFunction]

^
core/iwasm/aot/debug/jit_debug.c:214:0: style: The function 'jit_code_entry_create' is never used. [unusedFunction]

^
core/iwasm/aot/debug/jit_debug.c:239:0: style: The function 'jit_code_entry_destroy' is never used. [unusedFunction]

^
core/iwasm/fast-jit/cg/x86-64/jit_codegen_x86_64.cpp:9125:0: style: The function 'jit_codegen_free_native' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_compiler.c:186:0: style: The function 'jit_compiler_compile_all' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_compiler.c:104:0: style: The function 'jit_compiler_destroy' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_compiler.c:81:0: style: The function 'jit_compiler_init' is never used. [unusedFunction]

^
core/iwasm/aot/debug/jit_debug.c:191:0: style: The function 'jit_debug_engine_destroy' is never used. [unusedFunction]

^
core/iwasm/aot/debug/jit_debug.c:168:0: style: The function 'jit_debug_engine_init' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_frontend.c:2310:0: style: The function 'jit_frontend_get_jitted_return_addr_offset' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_frontend.c:113:0: style: The function 'jit_frontend_get_module_inst_extra_offset' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_ir.c:244:0: style: The function 'jit_insn_equal' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_ir.c:221:0: style: The function 'jit_insn_hash' is never used. [unusedFunction]

^
core/iwasm/fast-jit/jit_compiler.c:287:0: style: The function 'jit_interp_switch_to_jitted' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:209:0: style: The function 'lib_pthread_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-pthread/lib_pthread_wrapper.c:188:0: style: The function 'lib_pthread_init' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-wasi-threads/lib_wasi_threads_wrapper.c:180:0: style: The function 'lib_wasi_threads_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/lib-wasi-threads/lib_wasi_threads_wrapper.c:166:0: style: The function 'lib_wasi_threads_init' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:253:0: style: The function 'lv_label_cut_text' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:155:0: style: The function 'lv_label_get_align' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:182:0: style: The function 'lv_label_get_anim_speed' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:173:0: style: The function 'lv_label_get_body_draw' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:202:0: style: The function 'lv_label_get_letter_on' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:191:0: style: The function 'lv_label_get_letter_pos' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:146:0: style: The function 'lv_label_get_long_mode' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:164:0: style: The function 'lv_label_get_recolor' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:233:0: style: The function 'lv_label_get_text_sel_end' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:224:0: style: The function 'lv_label_get_text_sel_start' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:242:0: style: The function 'lv_label_ins_text' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:213:0: style: The function 'lv_label_is_char_under_pos' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:64:0: style: The function 'lv_label_set_align' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:91:0: style: The function 'lv_label_set_anim_speed' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:35:0: style: The function 'lv_label_set_array_text' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:82:0: style: The function 'lv_label_set_body_draw' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:55:0: style: The function 'lv_label_set_long_mode' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:73:0: style: The function 'lv_label_set_recolor' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:45:0: style: The function 'lv_label_set_static_text' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:109:0: style: The function 'lv_label_set_text_sel_end' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:100:0: style: The function 'lv_label_set_text_sel_start' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_obj.c:65:0: style: The function 'lv_obj_get_event_cb' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/restful_utils.c:399:0: style: The function 'match_url' is never used. [unusedFunction]

^
core/app-mgr/app-manager/module_wasm_app.c:1582:0: style: The function 'module_wasm_app_handle_install_msg' is never used. [unusedFunction]

^
core/app-framework/connection/app/connection.c:99:0: style: The function 'on_connection_data' is never used. [unusedFunction]

^
samples/simple/wasm-apps/connection.c:85:0: style: The function 'on_destroy' is never used. [unusedFunction]

^
samples/gui/wasm-apps/decrease/src/main.c:36:0: style: The function 'on_init' is never used. [unusedFunction]

^
core/app-framework/base/app/request.c:302:0: style: The function 'on_request' is never used. [unusedFunction]

^
core/app-framework/base/app/request.c:258:0: style: The function 'on_response' is never used. [unusedFunction]

^
core/app-framework/sensor/app/sensor.c:107:0: style: The function 'on_sensor_event' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:40:0: style: The function 'on_thread_exit_event' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:26:0: style: The function 'on_thread_stop_event' is never used. [unusedFunction]

^
core/app-framework/base/app/timer.c:89:0: style: The function 'on_timer_callback' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_obj.c:113:0: style: The function 'on_widget_event' is never used. [unusedFunction]

^
core/shared/platform/common/posix/posix_thread.c:206:0: style: The function 'os_sem_close' is never used. [unusedFunction]

^
core/shared/platform/common/posix/posix_thread.c:230:0: style: The function 'os_sem_getvalue' is never used. [unusedFunction]

^
core/shared/platform/common/posix/posix_thread.c:200:0: style: The function 'os_sem_open' is never used. [unusedFunction]

^
core/shared/platform/common/posix/posix_thread.c:224:0: style: The function 'os_sem_post' is never used. [unusedFunction]

^
core/shared/platform/common/posix/posix_thread.c:218:0: style: The function 'os_sem_trywait' is never used. [unusedFunction]

^
core/shared/platform/common/posix/posix_thread.c:246:0: style: The function 'os_sem_unlink' is never used. [unusedFunction]

^
core/shared/platform/windows/win_thread.c:394:0: style: The function 'os_thread_env_destroy' is never used. [unusedFunction]

^
core/shared/platform/windows/win_thread.c:354:0: style: The function 'os_thread_env_init' is never used. [unusedFunction]

^
core/shared/platform/windows/win_thread.c:410:0: style: The function 'os_thread_env_inited' is never used. [unusedFunction]

^
core/shared/platform/esp-idf/espidf_platform.c:57:0: style: The function 'os_usleep' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:38:0: style: The function 'pal_get_enclave_id' is never used. [unusedFunction]

^
core/shared/platform/android/platform_init.c:64:0: style: The function 'posix_fadvise' is never used. [unusedFunction]

^
core/shared/platform/linux-sgx/sgx_platform.c:61:0: style: The function 'putchar' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1596:0: style: The function 'rt_val_to_wasm_val' is never used. [unusedFunction]

^
core/iwasm/compilation/aot_orc_extra2.cpp:67:0: style: The function 'runOnMachineFunction' is never used. [unusedFunction]

^
samples/wasm-c-api/src/clone.c:415:0: style: The function 'run_warm_start_w_instantiated_module' is never used. [unusedFunction]

^
core/shared/platform/common/math/math.c:1678:0: style: The function 'scalbn' is never used. [unusedFunction]

^
core/app-framework/sensor/app/sensor.c:56:0: style: The function 'sensor_config_with_attr_container' is never used. [unusedFunction]

^
core/shared/platform/zephyr/zephyr_platform.c:218:0: style: The function 'set_exec_mem_alloc_func' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:71:0: style: The function 'set_int16' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:83:0: style: The function 'set_int32' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:95:0: style: The function 'set_int64' is never used. [unusedFunction]

^
core/app-framework/app-native-shared/attr_container.c:101:0: style: The function 'set_uint64' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:112:0: style: The function 'shared_memory_dec_reference' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:136:0: style: The function 'shared_memory_get_memory_inst' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:99:0: style: The function 'shared_memory_inc_reference' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:142:0: style: The function 'shared_memory_set_memory_inst' is never used. [unusedFunction]

^
core/iwasm/compilation/simd/simd_common.c:128:0: style: The function 'simd_build_splat_const_float_vector' is never used. [unusedFunction]

^
language-bindings/go/samples/wasm-app/main.c:19:0: style: The function 'test1' is never used. [unusedFunction]

^
language-bindings/go/samples/wasm-app/main.c:25:0: style: The function 'test2' is never used. [unusedFunction]

^
language-bindings/go/samples/wasm-app/main.c:32:0: style: The function 'test3' is never used. [unusedFunction]

^
language-bindings/go/samples/wasm-app/main.c:39:0: style: The function 'test4' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:59:0: style: The function 'thread_manager_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:49:0: style: The function 'thread_manager_init' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:901:0: style: The function 'wamr_pal_create_process' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:1018:0: style: The function 'wamr_pal_destroy' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:1025:0: style: The function 'wamr_pal_exec' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:883:0: style: The function 'wamr_pal_get_version' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:889:0: style: The function 'wamr_pal_init' is never used. [unusedFunction]

^
product-mini/platforms/linux-sgx/enclave-sample/App/App.cpp:1032:0: style: The function 'wamr_pal_kill' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1138:0: style: The function 'wams_cluster_wait_for_all' is never used. [unusedFunction]

^
core/iwasm/libraries/wasi-nn/src/wasi_nn.c:163:0: style: The function 'wasi_nn_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3168:0: style: The function 'wasi_ssp_sock_get_recv_buf_size' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3195:0: style: The function 'wasi_ssp_sock_get_reuse_addr' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3223:0: style: The function 'wasi_ssp_sock_get_reuse_port' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3257:0: style: The function 'wasi_ssp_sock_get_send_buf_size' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3354:0: style: The function 'wasi_ssp_sock_set_recv_buf_size' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3379:0: style: The function 'wasi_ssp_sock_set_reuse_addr' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3404:0: style: The function 'wasi_ssp_sock_set_reuse_port' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3435:0: style: The function 'wasi_ssp_sock_set_send_buf_size' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:268:0: style: The function 'wasm_byte_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:2718:0: style: The function 'wasm_call_indirect' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:209:0: style: The function 'wasm_cluster_create' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:425:0: style: The function 'wasm_cluster_del_exec_env' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:566:0: style: The function 'wasm_cluster_destroy_spawned_exec_env' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1343:0: style: The function 'wasm_cluster_is_thread_terminated' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1230:0: style: The function 'wasm_cluster_resume_all' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:42:0: style: The function 'wasm_cluster_set_max_thread_num' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:474:0: style: The function 'wasm_cluster_spawn_exec_env' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1320:0: style: The function 'wasm_cluster_spread_custom_data' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1297:0: style: The function 'wasm_cluster_spread_exception' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1197:0: style: The function 'wasm_cluster_suspend_all' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1205:0: style: The function 'wasm_cluster_suspend_all_except_self' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1100:0: style: The function 'wasm_cluster_terminate_all' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1112:0: style: The function 'wasm_cluster_terminate_all_except_self' is never used. [unusedFunction]

^
core/iwasm/libraries/thread-mgr/thread_manager.c:1150:0: style: The function 'wasm_cluster_wait_for_all_except_self' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:299:0: style: The function 'wasm_config_delete' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:293:0: style: The function 'wasm_config_new' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:329:0: style: The function 'wasm_debug_engine_destroy' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:340:0: style: The function 'wasm_debug_engine_init' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:370:0: style: The function 'wasm_debug_instance_create' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:475:0: style: The function 'wasm_debug_instance_destroy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:446:0: style: The function 'wasm_engine_new_with_config' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/debug_engine.c:877:0: style: The function 'wasm_exec_env_get_instance' is never used. [unusedFunction]

^
core/iwasm/common/wasm_exec_env.c:201:0: style: The function 'wasm_exec_env_set_module_inst' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:271:0: style: The function 'wasm_exporttype_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:271:0: style: The function 'wasm_exporttype_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:272:0: style: The function 'wasm_extern_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_foreign_as_ref_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_foreign_get_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_foreign_same' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_foreign_set_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_foreign_set_host_info_with_finalizer' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:273:0: style: The function 'wasm_frame_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:5213:0: style: The function 'wasm_func_as_extern_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_func_as_ref_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_func_get_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_func_same' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_func_set_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_func_set_host_info_with_finalizer' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1283:0: style: The function 'wasm_functype_as_externtype_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:952:0: style: The function 'wasm_functype_same_internal' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:274:0: style: The function 'wasm_functype_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:274:0: style: The function 'wasm_functype_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/common/wasm_memory.c:806:0: style: The function 'wasm_get_linear_memory_size' is never used. [unusedFunction]

^
core/iwasm/common/wasm_memory.c:790:0: style: The function 'wasm_get_num_bytes_per_page' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:5213:0: style: The function 'wasm_global_as_extern_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_global_as_ref' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_global_as_ref_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_global_get_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_global_set_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_global_set_host_info_with_finalizer' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1283:0: style: The function 'wasm_globaltype_as_externtype_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:275:0: style: The function 'wasm_importtype_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:275:0: style: The function 'wasm_importtype_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:276:0: style: The function 'wasm_instance_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:276:0: style: The function 'wasm_instance_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:1645:0: style: The function 'wasm_instantiate' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:64:0: style: The function 'wasm_load_from_sections' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:5213:0: style: The function 'wasm_memory_as_extern_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_memory_as_ref' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_memory_as_ref_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_memory_get_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:4339:0: style: The function 'wasm_memory_grow' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:4107:0: style: The function 'wasm_memory_new' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_memory_set_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_memory_set_host_info_with_finalizer' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1283:0: style: The function 'wasm_memorytype_as_externtype_const' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:2603:0: style: The function 'wasm_module_dup_data' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:2597:0: style: The function 'wasm_module_free' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:93:0: style: The function 'wasm_module_get_shared_memory' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:2589:0: style: The function 'wasm_module_realloc' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:2291:0: style: The function 'wasm_module_validate' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:277:0: style: The function 'wasm_module_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:277:0: style: The function 'wasm_module_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/common/wasm_native.c:398:0: style: The function 'wasm_native_init' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-builtin/libc_builtin_wrapper.c:1099:0: style: The function 'wasm_native_lookup_libc_builtin_global' is never used. [unusedFunction]

^
core/iwasm/common/wasm_native.c:369:0: style: The function 'wasm_native_register_natives_raw' is never used. [unusedFunction]

^
core/iwasm/common/wasm_native.c:378:0: style: The function 'wasm_native_unregister_natives' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_ref_as_foreign' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1825:0: style: The function 'wasm_ref_as_foreign_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_ref_as_func' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1826:0: style: The function 'wasm_ref_as_func_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_ref_as_global' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1827:0: style: The function 'wasm_ref_as_global_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_ref_as_memory' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1828:0: style: The function 'wasm_ref_as_memory_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_ref_as_table' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_ref_as_table_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1824:0: style: The function 'wasm_ref_set_host_info_with_finalizer' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:442:0: style: The function 'wasm_runtime_atomic_notify' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:304:0: style: The function 'wasm_runtime_atomic_wait' is never used. [unusedFunction]

^
core/iwasm/common/wasm_memory.c:265:0: style: The function 'wasm_runtime_get_mem_alloc_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_memory.c:133:0: style: The function 'wasm_runtime_memory_destroy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_memory.c:102:0: style: The function 'wasm_runtime_memory_init' is never used. [unusedFunction]

^
core/iwasm/common/wasm_memory.c:150:0: style: The function 'wasm_runtime_memory_pool_size' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:1636:0: style: The function 'wasm_set_running_mode' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:66:0: style: The function 'wasm_shared_memory_destroy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_shared_memory.c:49:0: style: The function 'wasm_shared_memory_init' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:278:0: style: The function 'wasm_store_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:278:0: style: The function 'wasm_store_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:5213:0: style: The function 'wasm_table_as_extern_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_table_as_ref' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_table_as_ref_const' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_table_get_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:4075:0: style: The function 'wasm_table_grow' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:3836:0: style: The function 'wasm_table_new' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_table_set_host_info' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1829:0: style: The function 'wasm_table_set_host_info_with_finalizer' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1283:0: style: The function 'wasm_tabletype_as_externtype_const' is never used. [unusedFunction]

^
core/iwasm/interpreter/wasm_runtime.c:72:0: style: The function 'wasm_unload' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:1636:0: style: The function 'wasm_val_to_rt_val' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:269:0: style: The function 'wasm_val_vec_copy' is never used. [unusedFunction]

^
core/iwasm/common/wasm_c_api.c:269:0: style: The function 'wasm_val_vec_new_empty' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:2803:0: style: The function 'wasmtime_ssp_proc_raise' is never used. [unusedFunction]

^
core/iwasm/libraries/libc-wasi/sandboxed-system-primitives/src/posix.c:3461:0: style: The function 'wasmtime_ssp_sock_recv' is never used. [unusedFunction]

^
core/app-mgr/app-manager/watchdog.c:105:0: style: The function 'watchdog_thread_routine' is never used. [unusedFunction]

^
core/app-mgr/app-manager/watchdog.c:69:0: style: The function 'watchdog_timer_start' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_cb.c:62:0: style: The function 'wgl_cb_get_text' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_cb.c:53:0: style: The function 'wgl_cb_get_text_length' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:127:0: style: The function 'wgl_label_get_text' is never used. [unusedFunction]

^
core/app-framework/wgl/app/src/wgl_label.c:118:0: style: The function 'wgl_label_get_text_length' is never used. [unusedFunction]

^
core/iwasm/libraries/debug-engine/packets.c:55:0: style: The function 'write_binary_packet' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

